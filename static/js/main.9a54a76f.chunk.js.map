{"version":3,"sources":["Pokedex.js","Pokemon.js","Search.js","PokedexProvider.js","withPokedexContext.js","SoloGame.js","Mate.js","ChooseLevel.js","DuoGame.js","Tile.js","Board.js","Player.js","EndingGame.js","Chrono.js","Starter.js","KeyElement.js","KeysBar.js","Game.js","Capacity.js","Capacities.js","Players.js","MultiplayerGame.js","Multiplayer.js","Video.js","Home.js","PokeditorChooseTile.js","PokeditorChooseItem.js","PokeditorChooseStartingPoint.js","PokeditorChooseSize.js","PokeditorChooseTimer.js","PokeditorSaveLevel.js","PokeditorLoadDeleteLevel.js","PokeditorBoard.js","Pokeditor.js","App.js","serviceWorker.js","index.js"],"names":["actualPlayer","pokemonType","Pokemon","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selectedStyle","style","border","_this$props","pokemonName","pokemonsCaught","pokemon","caught","pokemonClass","undefined","type","pokemonNumber","classType","i","length","name","readOnlyError","_this2","_this$props2","player","isClicked","game","concat","react_default","a","createElement","className","role","onClick","src","alt","Component","Search","_ref","handleChange","placeholder","onChange","event","target","value","PokedexContext","React","createContext","PokedexProvider","state","pokemons","getPokemon","pokedex","_loop","fetch","then","response","json","data","types","setState","children","Provider","actualStorage","pokemonContainer","withPokedexContext","OutComponent","Consumer","assign","Pokedex","changeType","typeRecup","getPoke","searchPoke","textRecup","pokeMap","typeArray","water","number","max","level","fire","grass","electric","psychic","dragon","normal","rock","fighting","fairy","bug","ground","poison","ghost","ice","JSON","parse","localStorage","getItem","pokemonsCaughtSorted","filter","obj","pos","arr","map","mapObj","indexOf","j","Math","ceil","getlevel","_this$state","backgroundImage","index","key","src_Search","id","poke","includes","toLowerCase","monster","src_Pokemon","SoloGame","soloLevels","getOwnPropertyNames","default","levels","solo","customLevels","react_router_dom","to","pathname","levelsolo","leveltype","marginRight","selectLevel","selectCustomLevel","size","src_Pokedex_0","getLevelsJ1","Mate","newvalue","levelIcons","push","star","ChooseLevel","player1","player2","mate1","mate2","closeModal","duoLevels","multiplayer","minHeight","marginTop","marginBottom","levelduo","DuoGame","levelsJ1","getPokeJ1","chosenPoke","value1","getLevelsJ2","levelsJ2","getPokeJ2","value2","modal","level1","level2","capacity1","capacity2","newvalue1","newvalue2","pokemon1","pokemon2","_value1$split","split","_value1$split2","slicedToArray","_value2$split","_value2$split2","src_ChooseLevel","src_Mate","Tile","itemClassName","projectileClassName","items","rowIndex","colIndex","tileId","projectiles","parseInt","backgroundSize","position","zIndex","backgroundRepeat","Board","tiles","row","src_Tile","Player","refreshRender","start","ongoingGame","clearInterval","gameLoop","now","Date","moveTime","speed","resetMove","losingKeyTime","losingKey","actionTime","actionDelay","resetAction","canMove","handleGamepad","handleKeyboard","canAct","handleGamepadAction","handleKeyboardAction","traps","posX","posY","img","gameMode","multiplayerRefresh","playerStunned","playerFrozen","_this$state2","gp","navigator","getGamepads","gpNumber","buttons","keys","up","pad","pressed","axes","move","down","left","right","action","gamepadVibration","triggerKeyboard","e","keyCode","keyboard","handleKeyUp","dir","getPlayerPos","playerNumber","targetedTileX","targetedTileY","targetedDirection","x","y","charImg","setTimeout","checkTile","_this$props3","padPressed","_this$props4","timers","playerAction","_this$props5","multiplayerActions","enemy","capacities","pokemonAttack","capacity","slice","defaultCapacity","startingPositions","charName","charData","playerConfused","playerOpacity","pixelsPerTile","document","addEventListener","setInterval","removeEventListener","_this$props6","finalDoorOpened","_this$state3","_this3","_this$state4","_this$props7","transferKey","_this4","_this$props8","multiplayerCoordinates","resetActions","gettingTargeted","byCapacity","gettingPunched","_this$state5","directionX","directionY","_this$state6","playerStyle","opacity","height","width","globalStyle","marginLeft","top","transitionDuration","pokemonStyle","maxWidth","maxHeight","transition","transitionProperty","transform","transitionTimingFunction","EndingGame","isWinner","isLoser","winner","tutoWinner","timer","levelName","pokemonNameMaj","charAt","toUpperCase","winnerName","title","message","setItem","timersdata","stringify","Chrono","format","time","seconds","minutes","floor","toString","count","newCount","getTime","Starter","tick","getStarter","KeyElement","isCaught","typeOfKey","Fragment","objectSpread","KeysBar","collectedKeys","numberOfKeys","finalDoorID","tab","Array","fill","display","styleDoor","backgroundPosition","keyBarclassName","keyElementClassName","nextProps","boolean","src_KeyElement","Game","setWonPokemon","newPokemon","location","selectedlevel","bind","assertThisInitialized","keysToCollect","randomPokemon","random","isTuto","openFinalDoor","switchedLever","switchedDoor","src_Chrono_0","src_EndingGame","src_Starter_0","src_Board_0","src_Player_0","src_KeysBar_0","Capacity","capacityIcon","maxtimer","progress","Capacities","capacitiesClassName","maxtimers","src_Capacity","Players","updateTimers","player1timers","player2timers","defineProperty","first1","first2","capacities1","capacities2","toConsumableArray","finalDoorOpened1","finalDoorOpened2","src_Capacities_0","MultiplayerGame","increment","fireballId","running","lightningBoltId","iceballId","src_Players","Multiplayer","selection","levelDuo","selectedLevel","src_MultiplayerGame","Video","videoTrue","controls","kind","Home","switchButton","getElementById","disabled","changeCharImgOne","num","userOneImg","nextIndex","charImagesList","changeCharImgTwo","userTwoImg","onSubmitOne","preventDefault","userOne","playerOneConnected","onDisconnectOne","onDisconnectTwo","playerTwoConnected","userTwo","onSubmitTwo","test","user","src_Video","onSubmit","minWidth","PokeditorChooseTile","selectTile","float","textDecoration","file","PokeditorChooseItem","selectItem","item","PokeditorChooseStartingPoint","background","PokeditorChooseSize","input","handleSubmit","changeSize","xInput","yInput","margin","color","htmlFor","changeTimer","PokeditorSaveLevel","saveLevel","PokeditorLoadDeleteLevel","loadLevel","deleteLevel","PokeditorBoard","changeTile","playerOneX","playerOneY","playerTwoX","playerTwoY","tileDisplay","Pokeditor","selectedTile","selectedItem","currentData","currentLevel","levelsList","newTimer","newLevel","newItemMatrix","src_PokeditorChooseSize","src_PokeditorLoadDeleteLevel","src_PokeditorSaveLevel","PokeditorChooseTimer","src_PokeditorChooseTile","src_PokeditorChooseItem","src_PokeditorChooseStartingPoint","src_PokeditorBoard","App","GameData","src_PokedexProvider","react_router","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a54a76f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n/* import { Link } from 'react-router-dom'; */\nimport Pokemon from './Pokemon';\nimport Search from './Search';\nimport './Pokedex.css';\nimport withPokedexContext from './withPokedexContext';\n\n\nlet actualPlayer;\nlet actualStorage = '';\nlet pokemonsCaught = '';\nlet pokemonType;\n\n\nlet pokemonContainer = 'pokemon-container1';\nclass Pokedex extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textRecup: '',\n      typeRecup: '',\n    };\n    this.pokeMap = [];\n    this.typeArray = ['water', 'fire', 'grass', 'electric',\n      'psychic', 'dragon', 'normal', 'rock', 'fighting', 'fairy',\n      'bug', 'ground', 'poison', 'ghost', 'ice'];\n    this.types = {\n      water: { number: 0, max: 28, level: 0 },\n      fire: { number: 0, max: 12, level: 0 },\n      grass: { number: 0, max: 12, level: 0 },\n      electric: { number: 0, max: 9, level: 0 },\n      psychic: { number: 0, max: 8, level: 0 },\n      dragon: { number: 0, max: 3, level: 0 },\n      normal: { number: 0, max: 22, level: 0 },\n      rock: { number: 0, max: 9, level: 0 },\n      fighting: { number: 0, max: 7, level: 0 },\n      fairy: { number: 0, max: 2, level: 0 },\n      bug: { number: 0, max: 12, level: 0 },\n      ground: { number: 0, max: 8, level: 0 },\n      poison: { number: 0, max: 14, level: 0 },\n      ghost: { number: 0, max: 3, level: 0 },\n      ice: { number: 0, max: 2, level: 0 },\n    };\n  }\n\n  componentDidMount() {\n    const { player } = this.props;\n    actualPlayer = 'Player';\n    if (player === 'player1') {\n      actualPlayer = JSON.parse(localStorage.getItem('connectedPlayer'));\n    }\n    if (player === 'player2') {\n      actualPlayer = JSON.parse(localStorage.getItem('connectedPlayer2'));\n    }\n\n    if (localStorage.getItem(actualPlayer)) {\n      actualStorage = JSON.parse(localStorage.getItem(actualPlayer));\n      pokemonsCaught = actualStorage.pokemons;\n    }\n    const pokemonsCaughtSorted = pokemonsCaught.filter((obj, pos, arr) => arr\n      .map(mapObj => mapObj.name).indexOf(obj.name) === pos);\n\n    /* Calcul pokémons attrapés par type */\n    if (pokemonsCaughtSorted.length > 0) {\n      for (let i = 0; i < pokemonsCaughtSorted.length; i += 1) {\n        pokemonType = pokemonsCaughtSorted[i].type;\n        for (let j = 0; j < this.typeArray.length; j += 1) {\n          if (this.typeArray[j] === pokemonType) {\n            this.types[pokemonType].number += 1;\n          }\n        }\n      }\n    }\n    /* Calcul du niveau */\n    for (let j = 0; j < this.typeArray.length; j += 1) {\n      if (this.types[this.typeArray[j]].number > 0) {\n        this.types[this.typeArray[j]].level = 1;\n      }\n      if (this.types[this.typeArray[j]].number\n        === Math.ceil(this.types[this.typeArray[j]].max / 2)) {\n        this.types[this.typeArray[j]].level = 2;\n      }\n      if (this.types[this.typeArray[j]].number === this.types[this.typeArray[j]].max) {\n        this.types[this.typeArray[j]].level = 3;\n      }\n    }\n    const { getlevel } = this.props;\n    if (getlevel) {\n      getlevel(this.types);\n    }\n  }\n\n\n  changeType = (event) => {\n    this.setState({ typeRecup: event.target.value });\n  }\n\n  isClicked = (name, type) => {\n    const { getPoke } = this.props;\n    if (type !== '' && name !== '') {\n      getPoke(`${type} ${name}`);\n    }\n  }\n\n  searchPoke = (textRecup) => {\n    this.setState({ textRecup });\n  }\n\n\n  render() {\n    const { player, pokemons } = this.props;\n    const {\n      textRecup, typeRecup,\n    } = this.state;\n    actualPlayer = 'Player';\n    if (player === 'player1') {\n      actualPlayer = JSON.parse(localStorage.getItem('connectedPlayer'));\n    }\n    if (player === 'player2') {\n      actualPlayer = JSON.parse(localStorage.getItem('connectedPlayer2'));\n    }\n\n    if (localStorage.getItem(actualPlayer)) {\n      actualStorage = JSON.parse(localStorage.getItem(actualPlayer));\n      pokemonsCaught = actualStorage.pokemons;\n    }\n    if (player === 'player1') {\n      pokemonContainer = 'pokemon-container1';\n    }\n    if (player === 'player2') {\n      pokemonContainer = 'pokemon-container2';\n    }\n    // const pokemonsCaughtSorted = pokemonsCaught.filter((obj, pos, arr) => arr\n    //   .map(mapObj => mapObj.name).indexOf(obj.name) === pos);\n\n    const { game } = this.props;\n\n    return (\n      <div className=\"global-container\">\n\n        <h2>\n          {actualPlayer}\n          &apos;s pokedex\n        </h2>\n        <div className=\"search-container\">\n          <div className=\"pokemonSearchBar\">\n            <div className=\"searchPoke\">\n              <div className=\"buttons\">\n                <button\n                  type=\"button\"\n                  style={{\n                    backgroundImage: 'url(./assets/pokeball.png)',\n                  }}\n                  className=\"imgelemArray\"\n                  value=\"\"\n                  onClick={this.changeType}\n                />\n              </div>\n              <div className=\"numbers\">\n                <span>\n                  All\n                </span>\n                <span className=\"starPoke\">\n                  {pokemonsCaught.length}\n                  /151\n                </span>\n              </div>\n            </div>\n            {this.typeArray.map((type, index) => (\n              <div className=\"searchPoke\" key={`typeId-${index + 1}`}>\n                <div className=\"buttons\">\n                  <button\n                    type=\"button\"\n                    style={{\n                      backgroundImage: `url(./assets/pokemons/elements/${type}.png)`,\n                    }}\n                    className=\"imgelemArray\"\n                    value={type}\n                    onClick={this.changeType}\n                  />\n                </div>\n                <div className=\"numbers\">\n                  <span>\n                    {this.types[type].number}\n                    {' '}\n                    /\n                    {this.types[type].max}\n                  </span>\n                  <span className=\"starPoke\">\n                    <img\n                      src={`./assets/pokemons/level${this.types[type].level}.png`}\n                      alt={this.types[type].level}\n                    />\n                  </span>\n                </div>\n              </div>\n            ))\n            }\n          </div>\n          <Search handleChange={this.searchPoke} />\n        </div>\n        <div id={pokemonContainer}>\n\n          {\n            pokemons.filter(poke => poke.type.includes(typeRecup)).filter(poke => poke.name.includes(textRecup.toLowerCase())).map((monster, index) => (\n              <Pokemon\n                key={monster.name}\n                id={index + 1}\n                pokemonType={monster.type}\n                pokemonName={monster.name}\n                pokemonsCaught={pokemonsCaught}\n                player={player}\n                game={game}\n                isClicked={this.isClicked}\n              />\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withPokedexContext(Pokedex);\n","import React, { Component } from 'react';\n\n\nclass Pokemon extends Component {\n  constructor(props) {\n    super(props);\n    const { pokemonName, pokemonsCaught } = this.props;\n    this.pokemon = pokemonName;\n    this.caught = pokemonsCaught;\n    this.pokemonClass = undefined;\n    this.type = undefined;\n    this.pokemonNumber = 0;\n    this.classType = undefined;\n    this.style = {\n      border: 'none',\n    };\n  }\n\n  componentWillMount() {\n    const { pokemonName } = this.props;\n    this.pokemonClass = 'notHave';\n    for (let i = 0; i < this.caught.length; i += 1) {\n      if (this.caught[i].name === pokemonName) {\n        this.pokemonClass = 'pokemon-single-container';\n        break;\n      } else {\n        this.pokemonClass = 'notHave';\n      }\n    }\n\n    for (let i = 0; i < this.caught.length; i += 1) {\n      if (this.caught[i].name === pokemonName) {\n        this.pokemonNumber += 1;\n      }\n    }\n\n    switch (this.pokemon) {\n      case 'nidoran-f':\n        this.pokemon = 'nidoran_f';\n        break;\n      case 'nidoran-m':\n        this.pokemon = 'nidoran_m';\n        break;\n      case 'deoxys-normal':\n        pokemonName = 'deoxys';\n        break;\n      case 'mr-mime':\n        pokemonName = 'mr.mime';\n        break;\n      default:\n        break;\n    }\n  }\n\n  selectedStyle = () => {\n    this.style = {\n      border: 'solid 3px red',\n    };\n  }\n\n  render() {\n    const {\n      player, isClicked, game, pokemonType,\n    } = this.props;\n    this.type = pokemonType;\n    this.classType = this.type;\n    if (player === 'player1') {\n      this.classType = this.type;\n    }\n    if (player === 'player2') {\n      this.classType = `${this.type}2`;\n    }\n    return (\n      <div className={this.classType}>\n        <div\n          className={this.pokemonClass}\n          style={this.style}\n          role=\"presentation\"\n          onClick={game === 'multi' && this.pokemonClass === 'pokemon-single-container' ? () => { isClicked(this.pokemon, this.type); this.selectedStyle(); } : undefined}\n        >\n          <div>\n            {this.type !== undefined ? <img className=\"imgelem\" src={`./assets/pokemons/elements/${this.type}.png`} alt={this.pokemon} /> : <img className=\"loadingType\" src=\"./assets/loading.png\" alt=\"loading\" />}\n          </div>\n          <div>\n            <img\n              className=\"sprites\"\n              src={`https://projectpokemon.org/images/normal-sprite/${this.pokemon}.gif`}\n              alt={this.pokemon}\n            />\n          </div>\n          <div className=\"align-bottom\">\n            {this.pokemon}\n            <span>\n              {this.pokemonNumber}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pokemon;\n","import React from 'react';\n\nconst Search = ({ handleChange }) => (\n  <input className=\"searchBar\" type=\"text\" placeholder=\"Search by pokemon name\" onChange={event => handleChange(event.target.value)} />\n);\n\nexport default Search;\n","import React, { Component } from 'react';\n\nexport const PokedexContext = React.createContext();\n\nclass PokedexProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemons: [],\n    };\n  }\n\n  componentWillMount() {\n    this.getPokemon();\n  }\n\n  getPokemon() {\n    const pokedex = [];\n    for (let i = 0; i < 151; i += 1) {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${i + 1}`)\n        .then(response => response.json())\n        .then((data) => {\n          let pokemonType = '';\n          if (data.types) {\n            if (data.types[1]) {\n              pokemonType = data.types[1].type.name;\n            } else {\n              pokemonType = data.types[0].type.name;\n            }\n          }\n          pokedex[i] = { name: data.name, type: pokemonType };\n          if (pokedex.length === 151) {\n            this.setState({\n              pokemons: pokedex,\n            });\n          }\n        });\n    }\n  }\n\n\n  render() {\n    const { children } = this.props;\n    return (\n      <PokedexContext.Provider value={this.state}>\n        {children}\n      </PokedexContext.Provider>\n    );\n  }\n}\n\nexport default PokedexProvider;\n","import React from 'react';\nimport { PokedexContext } from './PokedexProvider';\n\nconst withPokedexContext = OutComponent => props => (\n  <PokedexContext.Consumer>\n    {value => <OutComponent {...props} {...value} />}\n  </PokedexContext.Consumer>\n);\n\nexport default withPokedexContext;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokedex from './Pokedex';\nimport './SoloGame.css';\n\nclass SoloGame extends Component {\n  // <Game level={this.selectedLevel} levelName={this.levelName}\n  render() {\n    const soloLevels = Object.getOwnPropertyNames(JSON.parse(localStorage.getItem('GameData')).default.levels.solo);\n    const customLevels = Object.getOwnPropertyNames(JSON.parse(localStorage.getItem('PokemazeCustomLevels')));\n    return (\n\n\n      <div className=\"soloHome\">\n        <div className=\"levels\">\n          <h1>Choose your level</h1>\n          <div className=\"SoloLevels\">\n            <h3>Solo levels</h3>\n            <div className=\"buttonSolo\">\n              {\n                soloLevels.map((level, index) => (\n                  <Link\n                    to={{\n                      pathname: '/game',\n                      state: {\n                        levelsolo: level,\n                        leveltype: 'default',\n                      },\n                    }}\n                    key={`linksolo-${index + 1}`}\n                  >\n                    <button\n                      className=\"homeButton\"\n                      style={{ marginRight: 5 }}\n                      type=\"button\"\n                      key={`levelId-${index + 1}`}\n                      value={level}\n                      onClick={this.selectLevel}\n                    >\n                      {level}\n                    </button>\n                  </Link>\n                ))\n              }\n            </div>\n          </div>\n          <div className=\"CustomLevels\">\n            <h3>Custom levels</h3>\n            <p>\n              You can\n              {\"'\"}\n              t earn new Pokemons in this mode\n            </p>\n            <div className=\"buttonCustom\">\n              {\n                customLevels.map((level, index) => (\n                  <Link\n                    to={{\n                      pathname: '/game',\n                      state: {\n                        levelsolo: level,\n                        leveltype: 'custom',\n                      },\n                    }}\n                    key={`linkcustom-${index + 1}`}\n                  >\n                    <button\n                      className=\"homeButton\"\n                      type=\"button\"\n                      key={`customLevelId-${index + 1}`}\n                      value={level}\n                      onClick={this.selectCustomLevel}\n                      style={{ marginRight: 5 }}\n                    >\n                      {level}\n                    </button>\n                  </Link>\n                ))\n              }\n            </div>\n          </div>\n          <div className=\"homeContainer\">\n\n            <button\n              className=\"backButton\"\n              type=\"button\"\n              size=\"lg\"\n            >\n              <Link to=\"/\">\n                Back to menu\n              </Link>\n            </button>\n\n          </div>\n\n        </div>\n        <div className=\"pokedexJ1solo\">\n          <Pokedex getlevel={this.getLevelsJ1} player=\"player1\" game=\"solo\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SoloGame;\n","import React from 'react';\n\nconst Mate = ({\n pokemon, newvalue, level, player \n}) => {\n  const levelIcons = [];\n  for (let i = 0; i < 3; i += 1) {\n    if (i < level) {\n      levelIcons.push('star');\n    } else {\n      levelIcons.push('emptyStar');\n    }\n  }\n  return (\n    <div className=\"mateContainer\">\n      <h6>Choose your team mate</h6>\n      <p>\n        {player}\n        {' '}\n        select a pokemon in your pokedex\n      </p>\n      <div className=\"pokeAndElement\">\n        <div className=\"pokemon\">\n          {pokemon !== 'none'\n            ? (\n              <img\n                src={`https://www.pkparaiso.com/imagenes/xy/sprites/animados/${pokemon}.gif`}\n                alt={pokemon}\n              />\n            )\n            : (\n              <img\n                src=\"./assets/pokemons/unknow.png\"\n                alt=\"none\"\n              />\n            )\n          }\n        </div>\n        {pokemon !== 'none'\n          ? <img alt={newvalue} className=\"elem\" src={`./assets/pokemons/elements/${newvalue}.png`} />\n          : undefined\n        }\n      </div>\n      <div className=\"starsContainerPok\">\n        {pokemon !== 'none'\n          ? levelIcons.map((star, index) => (\n            <div\n              className={star}\n              key={`starId-${index + 1}`}\n              alt={star}\n            />\n          ))\n          : undefined\n        }\n      </div>\n    </div>\n  );\n};\n\n\nexport default Mate;\n","import React from 'react';\nimport './Modal.css';\nimport { Link } from 'react-router-dom';\n\nconst ChooseLevel = ({\n  player1,\n  player2,\n  mate1,\n  mate2,\n  closeModal,\n}) => {\n  const duoLevels = Object.getOwnPropertyNames(JSON.parse(localStorage.getItem('GameData')).default.levels.multiplayer);\n  return (\n    <div className=\"modal-wrapper\" style={{ minHeight: '15vw' }}>\n      <div className=\"modal-body\">\n        <img\n          className=\"greycross\"\n          src=\"./assets/deletegrey.png\"\n          alt=\"cross\"\n          role=\"presentation\"\n          onClick={closeModal}\n        />\n        <h3 style={{ marginTop: '2.7vw', marginBottom: '1.5vw' }}>Choose your level</h3>\n        {\n          duoLevels.map((level, index) => (\n            <Link\n              to={{\n                pathname: '/multiplayer',\n                state: {\n                  player1,\n                  mate1,\n                  player2,\n                  mate2,\n                  levelduo: level,\n                },\n              }}\n              key={`link-${index + 1}`}\n            >\n              <button\n                className=\"homeButton\"\n                style={{ marginRight: 5 }}\n                type=\"button\"\n                key={`levelId-${index + 1}`}\n                value={level}\n              >\n                {level}\n              </button>\n            </Link>\n          ))\n        }\n      </div>\n    </div>\n  );\n};\nexport default ChooseLevel;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokedex from './Pokedex';\nimport Mate from './Mate';\nimport './DuoGame.css';\nimport ChooseLevel from './ChooseLevel';\n\nclass DuoGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      levelsJ1: '',\n      levelsJ2: '',\n      value1: 'none',\n      value2: 'none',\n      modal: false,\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      modal: false,\n    });\n  }\n\n  getLevelsJ1 = (level) => {\n    this.setState({\n      levelsJ1: level,\n    });\n  }\n\n  getPokeJ1 = (chosenPoke) => {\n    this.setState({\n      value1: chosenPoke,\n    });\n  }\n\n  getLevelsJ2 = (level) => {\n    this.setState({\n      levelsJ2: level,\n    });\n  }\n\n  getPokeJ2 = (chosenPoke) => {\n    this.setState({\n      value2: chosenPoke,\n    });\n  }\n\n\n  closeModal = () => {\n    this.setState({\n      modal: false,\n    });\n  }\n\n  render() {\n    const {\n      value1, value2, levelsJ1, levelsJ2, modal,\n    } = this.state;\n    let level1;\n    let capacity1 = 'none';\n    let level2;\n    let capacity2 = 'none';\n    let newvalue1 = 'none';\n    let newvalue2 = 'none';\n    let pokemon1 = 'none';\n    let pokemon2 = 'none';\n\n    if (value1 !== 'none') {\n      [newvalue1, pokemon1] = value1.split(' ');\n      level1 = levelsJ1[newvalue1].level;\n      capacity1 = `${newvalue1}${level1}`;\n    }\n    if (value2 !== 'none') {\n      [newvalue2, pokemon2] = value2.split(' ');\n      level2 = levelsJ2[newvalue2].level;\n      capacity2 = `${newvalue2}${level2}`;\n    }\n    return (\n      <div className=\"DuoHome\">\n        <div className=\"pokedexJ1\">\n          <Pokedex getPoke={this.getPokeJ1} getlevel={this.getLevelsJ1} player=\"player1\" game=\"multi\" />\n        </div>\n        <div className=\"pokedexJ2\">\n          <Pokedex getPoke={this.getPokeJ2} getlevel={this.getLevelsJ2} player=\"player2\" game=\"multi\" />\n          {modal\n            ? (\n              <ChooseLevel\n                player1={capacity1}\n                mate1={pokemon1}\n                player2={capacity2}\n                mate2={pokemon2}\n                closeModal={this.closeModal}\n              />\n            )\n            : (undefined)\n          }\n        </div>\n        <div className=\"menuDuo\">\n          <Mate player=\"J1\" pokemon={pokemon1} newvalue={newvalue1} level={level1} />\n          <div className=\"playOrBack\">\n            <button\n              className=\"homeButton\"\n              type=\"button\"\n              size=\"lg\"\n              style={{ marginBottom: 18 }}\n              onClick={() => this.setState({ modal: true })}\n            >\n              PLAY\n            </button>\n\n            <div>\n              <Link to=\"/\">\n                <button\n                  className=\"backButton\"\n                  type=\"button\"\n                  size=\"lg\"\n                >\n                  Back to menu\n                </button>\n              </Link>\n            </div>\n          </div>\n          <Mate player=\"J2\" pokemon={pokemon2} newvalue={newvalue2} level={level2} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default DuoGame;\n","import React from 'react';\nimport './Tile.css';\n\nfunction Tile(props) {\n  const {\n    items, rowIndex, colIndex, tileId, projectiles,\n  } = props;\n  // Looking for items\n  let itemClassName;\n  if (items[rowIndex][colIndex] !== '000') {\n    // Objectives (items between 002 and 019)\n    if (parseInt(items[rowIndex][colIndex], 10) >= 2\n      && parseInt(items[rowIndex][colIndex], 10) <= 19) {\n      itemClassName = 'Objectives';\n    } else if (parseInt(items[rowIndex][colIndex], 10) >= 800\n    && parseInt(items[rowIndex][colIndex], 10) <= 899) {\n      itemClassName = 'Statues';\n      // Final doors (items 900+)\n    } else if (parseInt(items[rowIndex][colIndex], 10) >= 900) {\n      itemClassName = 'FinalDoor';\n    } else {\n      itemClassName = 'Item';\n    }\n  }\n  // Looking for projectiles\n  let projectileClassName;\n  if (projectiles[rowIndex][colIndex] === '001') {\n    projectileClassName = 'Fire';\n  } else if (projectiles[rowIndex][colIndex] === '002') {\n    projectileClassName = 'Lightning';\n  } else if (projectiles[rowIndex][colIndex] === '100') {\n    projectileClassName = 'Snowball';\n  } else if (projectiles[rowIndex][colIndex] === '101') {\n    projectileClassName = 'Snowpile';\n  }\n\n  return (\n    <div\n      className=\"Tile\"\n      style={{\n        backgroundImage: `url(${`./assets/tiles/${tileId}.png`})`,\n        backgroundSize: 'contain',\n      }}\n    >\n      {\n        items[rowIndex][colIndex] !== '000'\n          ? (\n            <img\n              alt=\"Item\"\n              src={`./assets/items/${items[rowIndex][colIndex]}.png`}\n              className={itemClassName}\n            />\n          )\n          : null\n      }\n      {\n        projectiles[rowIndex][colIndex] !== '000'\n          ? (\n            <img\n              alt={projectileClassName}\n              className={projectileClassName}\n              src={`./assets/projectiles/${projectiles[rowIndex][colIndex]}.png`}\n              style={{\n                position: 'absolute',\n                zIndex: 6,\n                backgroundImage: `./assets/projectiles/${projectiles[rowIndex][colIndex]}.png`,\n                backgroundSize: 'contain',\n                backgroundRepeat: 'no-repeat',\n              }}\n            />\n          )\n          : null\n      }\n    </div>\n  );\n}\n\nexport default Tile;\n","import React from 'react';\nimport Tile from './Tile';\nimport './Board.css';\n\nconst Board = ({ tiles, items, projectiles }) => (\n  <div className=\"Board\">\n    {\n      tiles.map((row, rowIndex) => (\n        <div key={`row-${rowIndex + 1}`} className=\"row\">\n          {row.map((tileId, colIndex) => (\n            <div key={`col-${colIndex + 1}`} className=\"col\">\n              <Tile\n                tileId={tileId}\n                items={items}\n                rowIndex={rowIndex}\n                colIndex={colIndex}\n                tiles={tiles}\n                projectiles={projectiles}\n              />\n            </div>\n          ))}\n        </div>\n      ))\n    }\n  </div>\n);\n\nexport default Board;\n","\nimport React, { Component } from 'react';\nimport './Player.css';\n\nclass Player extends Component {\n  constructor(props) {\n    super(props);\n    if (props.gameMode) {\n      this.gameMode = props.gameMode;\n    }\n    if (props.pokemon) {\n      if (props.pokemon !== 'none') {\n        this.pokemon = props.pokemon;\n      }\n    }\n    const posX = props.startingPositions.x;\n    const posY = props.startingPositions.y;\n    this.posX = posX;\n    this.posY = posY;\n    this.targetedTileX = this.posX;\n    this.targetedTileY = this.posY + 1;\n    this.dir = 'down';\n    this.canMove = true;\n    this.canAct = true;\n    this.losingKey = false;\n    this.moveTime = Date.now();\n    this.speed = 170;\n    this.actionDelay = 300;\n    // Define buttons for each player\n    if (props.playerNumber === 'player1') {\n      this.charName = JSON.parse(localStorage.getItem('connectedPlayer'));\n      this.gpNumber = 0;\n      this.keys = {\n        up: {\n          keyboard: 90,\n          pad: 12,\n          pressed: false,\n        },\n        down: {\n          keyboard: 83,\n          pad: 13,\n          pressed: false,\n        },\n        left: {\n          keyboard: 81,\n          pad: 14,\n          pressed: false,\n        },\n        right: {\n          keyboard: 68,\n          pad: 15,\n          pressed: false,\n        },\n        action: {\n          keyboard: 16,\n          pad: 0,\n          pressed: false,\n        },\n      };\n      this.enemy = 'player2';\n    } else if (props.playerNumber === 'player2') {\n      this.charName = JSON.parse(localStorage.getItem('connectedPlayer2'));\n      this.gpNumber = 1;\n      this.keys = {\n        up: {\n          keyboard: 38,\n          pad: 12,\n          pressed: false,\n        },\n        down: {\n          keyboard: 40,\n          pad: 13,\n          pressed: false,\n        },\n        left: {\n          keyboard: 37,\n          pad: 14,\n          pressed: false,\n        },\n        right: {\n          keyboard: 39,\n          pad: 15,\n          pressed: false,\n        },\n        action: {\n          keyboard: 32,\n          pad: 0,\n          pressed: false,\n        },\n      };\n      this.enemy = 'player1';\n    }\n    // Get player image\n    const charData = JSON.parse(localStorage.getItem(this.charName));\n    this.charImg = charData.charImg;\n    this.img = `${this.charImg}Bottom`;\n    this.state = {\n      pokemonAttack: false,\n      playerStunned: false,\n      playerConfused: false,\n      playerFrozen: false,\n      playerOpacity: 1,\n      posX: props.startingPositions.x,\n      posY: props.startingPositions.y,\n      img: `${this.charImg}Bottom`,\n      pixelsPerTile: 3.1,\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.triggerKeyboard, false);\n    document.addEventListener('keyup', this.handleKeyUp, false);\n    this.gameLoop = setInterval(() => {\n      this.refreshRender();\n    }, 50);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.triggerKeyboard, false);\n    document.removeEventListener('keyup', this.handleKeyUp, false);\n    clearInterval(this.gameLoop);\n  }\n\n  refreshRender = () => {\n    const { start, ongoingGame } = this.props;\n    if (ongoingGame === false) {\n      clearInterval(this.gameLoop);\n    }\n    if (start) {\n      const now = Date.now();\n      if (now - this.moveTime > this.speed) {\n        this.resetMove();\n      }\n      if (now - this.losingKeyTime > 2000) {\n        this.losingKey = false;\n      }\n      if (now - this.actionTime > this.actionDelay) {\n        this.resetAction();\n      }\n      if (this.canMove) {\n        this.handleGamepad();\n        this.handleKeyboard();\n      }\n      if (this.canAct) {\n        this.handleGamepadAction();\n        this.handleKeyboardAction();\n      }\n      this.traps(this.posX, this.posY);\n      this.setState({\n        posX: this.posX,\n        posY: this.posY,\n        img: this.img,\n      });\n      if (this.gameMode === 'multiplayer') {\n        this.multiplayerRefresh();\n      }\n    }\n  }\n\n\n  resetMove = () => {\n    const { playerStunned, playerFrozen } = this.state;\n    if (!playerStunned && !playerFrozen) {\n      this.canMove = true;\n    }\n  }\n\n  resetAction = () => {\n    const { playerStunned, playerFrozen } = this.state;\n    if (!playerStunned && !playerFrozen) {\n      this.canAct = true;\n    }\n  }\n\n  handleGamepad = () => {\n    const gp = navigator.getGamepads();\n    if (gp[this.gpNumber] !== null && gp[this.gpNumber] !== undefined) {\n      if ((gp[this.gpNumber].buttons[this.keys.up.pad]\n        && gp[this.gpNumber].buttons[this.keys.up.pad].pressed)\n        || gp[this.gpNumber].axes[1] < -0.8) {\n        this.move('up');\n      } else if ((gp[this.gpNumber].buttons[this.keys.down.pad]\n        && gp[this.gpNumber].buttons[this.keys.down.pad].pressed)\n        || gp[this.gpNumber].axes[1] > 0.8) {\n        this.move('down');\n      } else if ((gp[this.gpNumber].buttons[this.keys.left.pad]\n        && gp[this.gpNumber].buttons[this.keys.left.pad].pressed)\n        || gp[this.gpNumber].axes[0] < -0.8) {\n        this.move('left');\n      } else if ((gp[this.gpNumber].buttons[this.keys.right.pad]\n        && gp[this.gpNumber].buttons[this.keys.right.pad].pressed)\n        || gp[this.gpNumber].axes[0] > 0.8) {\n        this.move('right');\n      }\n    }\n  }\n\n  handleGamepadAction = () => {\n    const gp = navigator.getGamepads();\n    if (gp[this.gpNumber] !== null && gp[this.gpNumber] !== undefined) {\n      if (gp[this.gpNumber].buttons[this.keys.action.pad].pressed) {\n        this.action();\n      }\n    }\n  }\n\n  gamepadVibration = () => {\n    // const gp = navigator.getGamepads();\n    // if (gp[this.gpNumber] !== null) {\n    // if (gp[this.gpNumber].vibrationActuator !== null) {\n    // gp[this.gpNumber].vibrationActuator.playEffect('dual-rumble', {\n    // startDelay: 0,\n    // duration: 500,\n    // weakMagnitude: 1.0,\n    // strongMagnitude: 1.0,\n    // });\n    // }\n    // }\n  }\n\n  triggerKeyboard = (e) => {\n    if (e.keyCode === this.keys.up.keyboard) {\n      this.keys.up.pressed = true;\n    }\n    if (e.keyCode === this.keys.down.keyboard && this.keys.down.pressed === false) {\n      this.keys.down.pressed = true;\n    }\n    if (e.keyCode === this.keys.left.keyboard && this.keys.left.pressed === false) {\n      this.keys.left.pressed = true;\n    }\n    if (e.keyCode === this.keys.right.keyboard && this.keys.right.pressed === false) {\n      this.keys.right.pressed = true;\n    }\n    if (e.keyCode === this.keys.action.keyboard && this.keys.action.pressed === false) {\n      this.keys.action.pressed = true;\n    }\n  }\n\n  handleKeyboard = () => {\n    if (this.keys.up.pressed) {\n      this.keys.up.pressed = false;\n      this.move('up');\n    }\n    if (this.keys.down.pressed) {\n      this.keys.down.pressed = false;\n      this.move('down');\n    }\n    if (this.keys.left.pressed) {\n      this.keys.left.pressed = false;\n      this.move('left');\n    }\n    if (this.keys.right.pressed) {\n      this.keys.right.pressed = false;\n      this.move('right');\n    }\n  }\n\n  handleKeyboardAction = () => {\n    if (this.keys.action.pressed) {\n      this.keys.action.pressed = false;\n      this.action();\n    }\n  }\n\n  handleKeyUp = (e) => {\n    switch (e.keyCode) {\n      case this.keys.down.keyboard: {\n        this.keys.down.pressed = false;\n        break;\n      }\n      case this.keys.up.keyboard: {\n        this.keys.up.pressed = false;\n        break;\n      }\n      case this.keys.left.keyboard: {\n        this.keys.left.pressed = false;\n        break;\n      }\n      case this.keys.right.keyboard: {\n        this.keys.right.pressed = false;\n        break;\n      }\n      case this.keys.action.keyboard: {\n        this.keys.action.pressed = false;\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  move = (dir) => {\n    const {\n      getPlayerPos, playerNumber,\n    } = this.props;\n    // MOVES\n    if (this.canMove) {\n      this.moveTime = Date.now();\n      this.canMove = false;\n      // Move right\n      if (dir === 'right') {\n        this.dir = 'right';\n        this.targetedTileX = this.posX + 1;\n        this.targetedTileY = this.posY;\n        this.targetedDirection = {\n          x: 1,\n          y: 0,\n        };\n        this.keys.right.pressed = true;\n        this.img = `${this.charImg}RightFeet`;\n        setTimeout(() => {\n          this.img = `${this.charImg}Right`;\n        }, this.speed / 2);\n        if (this.checkTile(1, 0)) {\n          this.posX += 1;\n        }\n        getPlayerPos(this.posX, this.posY, playerNumber);\n        return;\n      }\n      // Move left\n      if (dir === 'left') {\n        this.dir = 'left';\n        this.targetedTileX = this.posX - 1;\n        this.targetedTileY = this.posY;\n        this.targetedDirection = {\n          x: -1,\n          y: 0,\n        };\n        this.keys.left.pressed = true;\n        this.img = `${this.charImg}LeftFeet`;\n        setTimeout(() => {\n          this.img = `${this.charImg}Left`;\n        }, this.speed / 2);\n        if (this.checkTile(-1, 0)) {\n          this.posX -= 1;\n        }\n        getPlayerPos(this.posX, this.posY, playerNumber);\n        return;\n      }\n      // Move down\n      if (dir === 'down') {\n        this.dir = 'down';\n        this.targetedTileX = this.posX;\n        this.targetedTileY = this.posY + 1;\n        this.targetedDirection = {\n          x: 0,\n          y: 1,\n        };\n        this.keys.down.pressed = true;\n        this.img = `${this.charImg}BottomFeet`;\n        setTimeout(() => {\n          this.img = `${this.charImg}Bottom`;\n        }, this.speed / 2);\n        if (this.checkTile(0, 1)) {\n          this.posY += 1;\n        }\n        getPlayerPos(this.posX, this.posY, playerNumber);\n        return;\n      }\n      // Move up\n      if (dir === 'up') {\n        this.dir = 'up';\n        this.keys.up.pressed = true;\n        this.targetedTileX = this.posX;\n        this.targetedTileY = this.posY - 1;\n        this.targetedDirection = {\n          x: 0,\n          y: -1,\n        };\n        this.img = `${this.charImg}TopFeet`;\n        setTimeout(() => {\n          this.img = `${this.charImg}Top`;\n        }, this.speed / 2);\n        if (this.checkTile(0, -1)) {\n          this.posY -= 1;\n        }\n        getPlayerPos(this.posX, this.posY, playerNumber);\n      }\n    }\n  }\n\n  action = () => {\n    const {\n      tiles, items, playerNumber,\n    } = this.props;\n    if (this.canAct) {\n      switch (this.dir) {\n        case 'up': {\n          this.keys.up.pressed = true;\n          this.targetedTileX = this.posX;\n          this.targetedTileY = this.posY - 1;\n          this.targetedDirection = {\n            x: 0,\n            y: -1,\n          };\n          break;\n        }\n        case 'down': {\n          this.targetedTileX = this.posX;\n          this.targetedTileY = this.posY + 1;\n          this.targetedDirection = {\n            x: 0,\n            y: 1,\n          };\n          break;\n        }\n        case 'left': {\n          this.targetedTileX = this.posX - 1;\n          this.targetedTileY = this.posY;\n          this.targetedDirection = {\n            x: -1,\n            y: 0,\n          };\n          break;\n        }\n        case 'right': {\n          this.targetedTileX = this.posX + 1;\n          this.targetedTileY = this.posY;\n          this.targetedDirection = {\n            x: 1,\n            y: 0,\n          };\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n      this.actionTime = Date.now();\n      this.canAct = false;\n      this.keys.action.padPressed = true;\n      this.keys.action.pressed = true;\n      // Checks if targeted tile is out of the map\n      if (this.targetedTileX >= 0\n        && this.targetedTileY >= 0\n        && this.targetedTileY < tiles.length\n        && this.targetedTileX < tiles[this.targetedTileY].length\n      ) {\n        const { gameMode, timers } = this.props;\n        // Activate lever if there is any on tile\n        if (parseInt(items[this.targetedTileY][this.targetedTileX], 10) >= 700\n          && parseInt(items[this.targetedTileY][this.targetedTileX], 10) <= 799) {\n          const { playerAction } = this.props;\n          // Callback to Game for solo, MultiplayerGame for multiplayer\n          playerAction(this.targetedTileY, this.targetedTileX);\n          // Multiplayer actions;\n          // To do: multiple timers if multiple abilities (timers[0] -> timers[selectedAbility])\n        } else if (gameMode === 'multiplayer' && timers[0] === 0) {\n          const { multiplayerActions, enemy, capacities } = this.props;\n          // Pokemon animation\n          this.setState({ pokemonAttack: true });\n          setTimeout(() => this.setState({ pokemonAttack: false }), 300);\n          // Capacities\n          const capacity = capacities[0];\n          if (capacity.slice(0, -1) === 'invisibility') {\n            multiplayerActions(\n              playerNumber, this.enemy, capacity,\n              this.targetedDirection.x, this.targetedDirection.y,\n            );\n          } else if (capacity.slice(0, -1) === 'electric'\n            || capacity.slice(0, -1) === 'fire'\n            || capacity.slice(0, -1) === 'ice'\n            || capacity.slice(0, -1) === 'water'\n            || capacity.slice(0, -1) === 'dragon'\n            || capacity.slice(0, -1) === 'fairy') {\n            const { playerAction } = this.props;\n            // Callback to MultiplayerGame\n            playerAction(\n              this.targetedTileY, this.targetedTileX, capacity,\n              this.targetedDirection.x, this.targetedDirection.y,\n            );\n            // Callback to Players\n            multiplayerActions(\n              playerNumber, this.enemy, capacity,\n              this.targetedDirection.x, this.targetedDirection.y,\n            );\n          } else {\n            // default ability: punch\n            const defaultCapacity = `punch${capacity.slice(-1)}`;\n            if (this.targetedTileX === enemy.x && this.targetedTileY === enemy.y) {\n              multiplayerActions(\n                playerNumber, this.enemy, defaultCapacity,\n                this.targetedDirection.x, this.targetedDirection.y,\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Checks if tile is an obstacle in the level after a move\n  // => tiles named \"500\"+ and items named \"900\"+\n  // AND levers (items 700 to 799)\n  // AND doors not activated by levers (even numbers between 800 and 899)\n  checkTile(x, y) {\n    const {\n      tiles, items, finalDoorOpened, enemy,\n    } = this.props;\n    const { posX, posY } = this.state;\n    if (posX + x < 0\n      || posY + y < 0\n      || posY + y >= tiles.length\n      || posX + x >= tiles[posY].length\n    ) {\n      return false;\n    }\n    if (this.gameMode === 'multiplayer') {\n      // Special check for multiplayer: can't pass through other player\n      if (enemy.x === posX + x && enemy.y === posY + y) {\n        return false;\n      }\n      // Special check for multiplayer: final door opened\n      if (parseInt(items[posY + y][posX + x], 10) >= 900\n        && finalDoorOpened) {\n        return true;\n      }\n    }\n    // Normal checks\n    if (parseInt(tiles[posY + y][posX + x], 10) >= 500\n      || parseInt(items[posY + y][posX + x], 10) >= 900\n      || (parseInt(items[posY + y][posX + x], 10) >= 700\n        && parseInt(items[posY + y][posX + x], 10) <= 799)\n      || (parseInt(items[posY + y][posX + x], 10) >= 800\n        && parseInt(items[posY + y][posX + x], 10) <= 899\n        && parseInt(items[posY + y][posX + x], 10) % 2 === 0)\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  // Change the position of player when his position = trap position\n  // is checked constantly (projectiles are considered as traps)\n  traps(x, y) {\n    const { posX, posY } = this.state;\n    const {\n      tiles, items, projectiles, startingPositions, transferKey, playerNumber,\n    } = this.props;\n    if ((parseInt(tiles[y][x], 10) >= 400\n      && parseInt(tiles[y][x], 10) <= 499)\n      || parseInt(tiles[y][x], 10) === 9\n      || (parseInt(items[y][x], 10) >= 400\n        && parseInt(items[y][x], 10) <= 499)\n      || (parseInt(tiles[posY][posX], 10) >= 400\n        && parseInt(tiles[posY][posX], 10) <= 499)\n      || parseInt(tiles[posY][posX], 10) === 9\n      || (parseInt(items[posY][posX], 10) >= 400\n        && parseInt(items[posY][posX], 10) <= 499)) {\n      setTimeout(() => {\n        this.setState({ playerStunned: true });\n        if (this.gameMode === 'multiplayer') {\n          if (this.losingKey === false) {\n            this.losingKeyTime = Date.now();\n            transferKey(playerNumber, this.enemy);\n            this.losingKey = true;\n          }\n        }\n        this.gamepadVibration();\n        this.posX = startingPositions.x;\n        this.posY = startingPositions.y;\n      }, this.speed * 2);\n      setTimeout(() => {\n        this.setState({ playerStunned: false });\n      }, 900);\n    }\n    if (parseInt(projectiles[y][x], 10) > 0\n      || parseInt(projectiles[posY][posX], 10) > 0) {\n      this.gamepadVibration();\n      if (parseInt(projectiles[posY][posX], 10) < 100) {\n        this.setState({ playerStunned: true });\n        if (this.losingKey === false) {\n          this.losingKeyTime = Date.now();\n          transferKey(playerNumber, this.enemy);\n          this.losingKey = true;\n        }\n        setTimeout(() => {\n          this.posX = startingPositions.x;\n          this.posY = startingPositions.y;\n        }, 200);\n        setTimeout(() => {\n          this.setState({ playerStunned: false });\n        }, 900);\n      } else if (parseInt(projectiles[posY][posX], 10) >= 100) {\n        this.setState({ playerFrozen: true });\n        if (this.losingKey === false) {\n          this.losingKeyTime = Date.now();\n          transferKey(playerNumber, this.enemy);\n          this.losingKey = true;\n        }\n        setTimeout(() => {\n          this.setState({ playerFrozen: false });\n        }, 3000);\n      }\n    }\n  }\n\n  multiplayerRefresh() {\n    const {\n      multiplayerCoordinates, playerNumber, player, resetActions,\n    } = this.props;\n    multiplayerCoordinates(this.posX, this.posY, playerNumber);\n    // When a player gets targeted by a capacity:\n    if (player.gettingTargeted) {\n      switch (player.gettingTargeted.byCapacity.slice(0, -1)) {\n        // Invisibility\n        case 'invisibility': {\n          this.setState({ playerOpacity: 0 });\n          setTimeout(() => this.setState({ playerOpacity: 1 }), 2000);\n          break;\n        }\n        // Psychic: reverse buttons\n        // case 'psychic': {\n        // this.canMove = false;\n        // this.setState({ playerConfused: true });\n        // this.defaultUpButton = this.keys.up.keyboard;\n        // this.defaultUpPadButton = this.keys.up.pad;\n        // this.defaultDownButton = this.keys.down.keyboard;\n        // this.defaultDownPadButton = this.keys.down.pad;\n        // this.defaultLeftButton = this.keys.left.keyboard;\n        // this.defaultLeftPadButton = this.keys.left.pad;\n        // this.defaultRightButton = this.keys.right.keyboard;\n        // this.defaultRightPadButton = this.keys.right.pad;\n        // this.keys.up.keyboard = this.defaultDownButton;\n        // this.keys.up.pad = this.defaultDownPadButton;\n        // this.keys.down.keyboard = this.defaultUpButton;\n        // this.keys.down.pad = this.defaultUpPadButton;\n        // this.keys.left.keyboard = this.defaultRightButton;\n        // this.keys.left.pad = this.defaultRightPadButton;\n        // this.keys.right.keyboard = this.defaultLeftButton;\n        // this.keys.right.pad = this.defaultUpLeftPadButton;\n        // this.canMove = true;\n        // setTimeout(() => {\n        // this.canMove = false;\n        // this.setState({ playerConfused: false });\n        // this.keys.up.keyboard = this.defaultUpButton;\n        // this.keys.up.pad = this.defaultUpPadButton;\n        // this.keys.down.keyboard = this.defaultDownButton;\n        // this.keys.down.pad = this.defaultDownPadButton;\n        // this.keys.left.keyboard = this.defaultLeftButton;\n        // this.keys.left.pad = this.defaultLeftPadButton;\n        // this.keys.right.keyboard = this.defaultRightButton;\n        // this.keys.right.pad = this.defaultRightPadButton;\n        // this.canMove = true;\n        // }, 3000);\n        // break;\n        // }\n        // Default capacity: punch\n        default: {\n          this.setState({ playerStunned: true });\n          this.gamepadVibration();\n          let gettingPunched = true;\n          while (gettingPunched) {\n            const { posX, posY } = this.state;\n            if (this.checkTile(\n              player.gettingTargeted.directionX, player.gettingTargeted.directionY,\n            )) {\n              this.setState({\n                posX: this.posX,\n                posY: this.posY,\n              });\n              this.posX = posX + player.gettingTargeted.directionX;\n              this.posY = posY + player.gettingTargeted.directionY;\n              this.traps(this.posX, this.posY);\n            } else {\n              gettingPunched = false;\n            }\n          }\n          setTimeout(() => {\n            this.setState({ playerStunned: false });\n          }, 2000);\n          resetActions();\n          break;\n        }\n      }\n    }\n  }\n\n  render() {\n    const {\n      img, posX, posY, pixelsPerTile, playerOpacity,\n      playerFrozen, playerConfused, playerStunned, pokemonAttack,\n    } = this.state;\n    // Player CSS\n    const playerStyle = {\n      opacity: playerOpacity,\n      position: 'absolute',\n      zIndex: 3,\n      backgroundImage: `url(./assets/characters/${img}.png`,\n      backgroundSize: 'contain',\n      backgroundRepeat: 'no-repeat',\n      height: '2.5vw',\n      width: '2.5vw',\n    };\n    // Player Container CSS\n    const globalStyle = {\n      position: 'absolute',\n      zIndex: 0,\n      height: '2.5vw',\n      width: '2.5vw',\n      marginTop: '4.9vw',\n      marginLeft: '-10.4vw',\n      // To do: cleaner calculation\n      top: `${posY * pixelsPerTile}vw`,\n      left: `${11 + posX * pixelsPerTile}vw`,\n      transitionDuration: `${this.speed + 400}ms`,\n      // transitionTimingFunction: 'linear',\n    };\n    const pokAttackStyle = {\n      zIndex: 4,\n      transitionDuration: '100ms',\n      transitionTimingFunction: 'linear',\n      maxWidth: '2.8vw',\n      maxHeight: '2.8vw',\n      marginTop: '0',\n      marginLeft: '-2vw',\n      transitionProperty: 'top, left, margin-top, margin-left',\n    };\n    if (this.img === `${this.charImg}TopFeet`) {\n      this.pokemonStyle = {\n        maxWidth: '2.2vw',\n        maxHeight: '2.2vw',\n        transition: '600ms',\n        zIndex: 1,\n        marginTop: '2.5vw',\n        marginLeft: '-1.4vw',\n        transitionProperty: 'top, left, margin-top, margin-left',\n      };\n    } else if (this.img === `${this.charImg}LeftFeet`) {\n      this.pokemonStyle = {\n        maxWidth: '2.2vw',\n        maxHeight: '2.2vw',\n        transition: '600ms',\n        zIndex: 1,\n        marginTop: '0.3vw',\n        marginLeft: '0.6vw',\n        transitionProperty: 'top, left, margin-top, margin-left',\n      };\n    } else if (this.img === `${this.charImg}RightFeet`) {\n      this.pokemonStyle = {\n        maxWidth: '2.2vw',\n        maxHeight: '2.2vw',\n        transition: '600ms',\n        zIndex: 1,\n        marginTop: '0.3vw',\n        marginLeft: '-3.3vw',\n        transform: 'scaleX(-1)',\n        transitionProperty: 'top, left, margin-top, margin-left',\n      };\n    } else if (this.img === `${this.charImg}BottomFeet`) {\n      this.pokemonStyle = {\n        maxWidth: '2.2vw',\n        maxHeight: '2.2vw',\n        transition: '600ms',\n        zIndex: 1,\n        marginTop: '-2.2vw',\n        marginLeft: '-1.2vw',\n        transitionProperty: 'top, left, margin-top, margin-left',\n      };\n    }\n\n    return (\n      <div className=\"playerContainer\" style={globalStyle}>\n        <div style={playerStyle}>\n          {\n            playerFrozen\n              ? (\n                <div className=\"frozen\" />\n              )\n              : null\n          }\n          {\n            playerConfused\n              ? (\n                <div className=\"confused\" />\n              )\n              : null\n          }\n          {\n            playerStunned\n              ? (\n                <div className=\"stunned\" />\n              )\n              : null\n          }\n        </div>\n        {\n          this.pokemon\n            ? (\n              <div\n                className=\"pokemonPetContainer\"\n              >\n                <img\n                  style={\n                    pokemonAttack ? pokAttackStyle : this.pokemonStyle\n                  }\n                  className=\"pokemonPet\"\n                  src={`https://projectpokemon.org/images/normal-sprite/${this.pokemon}.gif`}\n                  alt={this.pokemon}\n                />\n              </div>\n            )\n            : null\n        }\n      </div>\n\n    );\n  }\n}\n\nexport default Player;\n","import React from 'react';\nimport './Modal.css';\nimport { Link } from 'react-router-dom';\n\n\nconst EndingGame = ({\n  pokemon, isWinner, isLoser, winner, tutoWinner, timer, levelName, gameMode,\n}) => {\n  let pokemonName = pokemon.name;\n  const pokemonNameMaj = pokemonName.charAt(0).toUpperCase() + pokemonName.slice(1);\n  // const pokemonSprite = pokemon.sprites ?pokemon.sprites.back_default:\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/76.png\"\n  let winnerName = 'winner';\n  let title = '';\n  let message = '';\n  if (isWinner) {\n    if (winner === 'player1') {\n      winnerName = JSON.parse(localStorage.getItem('connectedPlayer'));\n      if (timer && levelName) {\n        if (!localStorage.getItem('timers')) {\n          localStorage.setItem('timers', '{}');\n        }\n        const timersdata = JSON.parse(localStorage.getItem('timers'));\n        if (timersdata[levelName]) {\n          const currentTimer = timersdata[levelName][0];\n          if (currentTimer < timer) {\n            timersdata[levelName] = [timer, winnerName];\n            localStorage.setItem('timers', JSON.stringify(timersdata));\n          }\n        } else {\n          timersdata[levelName] = [timer, winnerName];\n          localStorage.setItem('timers', JSON.stringify(timersdata));\n        }\n      }\n    }\n\n    if (winner === 'player2') {\n      winnerName = JSON.parse(localStorage.getItem('connectedPlayer2'));\n    }\n    title = `Congrats ${winnerName}!`;\n    message = 'You win';\n  }\n  if (tutoWinner) {\n    title = 'Congrats, you got it!';\n    message = 'You would have won';\n  }\n  if (isLoser) {\n    title = 'Too late !';\n    message = 'You lose';\n  }\n  switch (pokemonName) {\n    case 'nidoran-f':\n      pokemonName = 'nidoran_f';\n      break;\n    case 'nidoran-m':\n      pokemonName = 'nidoran_m';\n      break;\n    case 'deoxys-normal':\n      pokemonName = 'deoxys';\n      break;\n    case 'mr-mime':\n      pokemonName = 'mr.mime';\n      break;\n    default:\n      break;\n  }\n  return (\n    <div className=\"modal-wrapper\">\n      <div className=\"modal-body\">\n        <h5>{title}</h5>\n        <img className=\"imgPoke\" src={`https://projectpokemon.org/images/normal-sprite/${pokemonName}.gif`} alt={pokemonName} />\n        <h4>\n          {message}\n          {' '}\n          {pokemonNameMaj}\n          {' '}\n          !\n        </h4>\n        <p>\n          {gameMode === 'solo'\n            ? (\n              <Link\n                to=\"/solo-game\"\n              >\n                <button\n                  className=\"homeButton\"\n                  type=\"button\"\n                  size=\"lg\"\n                >\n                  Play again\n                </button>\n              </Link>\n            )\n            : (\n              <Link\n                to=\"/duo-game\"\n              >\n                <button\n                  className=\"homeButton\"\n                  type=\"button\"\n                  size=\"lg\"\n                >\n                  Play again\n                </button>\n              </Link>\n            )\n          }\n        </p>\n        <p>\n          <Link to=\"/\">\n            <button\n              className=\"backButton\"\n              type=\"button\"\n              size=\"lg\"\n            >\n              Back to menu\n            </button>\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default EndingGame;\n","import React, { Component } from 'react';\nimport './Chrono.css';\n\nclass Chrono extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: undefined,\n    };\n  }\n\n  componentWillMount() {\n    this.timer = setInterval(() => {\n      const { count } = this.state;\n      const newCount = count - 1;\n      this.setState({\n        count: newCount >= 0 ? newCount : 0,\n      });\n      if (newCount === 0) {\n        clearInterval(this.timer);\n      }\n      const { getTime } = this.props;\n      getTime(newCount);\n    }, 1000);\n  }\n\n  componentDidMount() {\n    const { count } = this.props;\n    this.setState({ count });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  format = (time) => {\n    let seconds = time % 60;\n    let minutes = Math.floor(time / 60);\n    minutes = minutes.toString().length === 1 ? `0${minutes}` : minutes;\n    seconds = seconds.toString().length === 1 ? `0${seconds}` : seconds;\n    return `${minutes}:${seconds}`;\n  }\n\n  render() {\n    const { count } = this.state;\n    const { isWinner } = this.props;\n    if (isWinner) {\n      clearInterval(this.timer);\n    }\n    return (\n      <div className=\"Timer\">\n        <div className=\"Count\">{this.format(count)}</div>\n      </div>\n\n    );\n  }\n}\nexport default Chrono;\n","import React, { Component } from 'react';\nimport './Modal.css';\nimport './Starter.css';\n\nclass Starter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: '4',\n    };\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.tick, 1000);\n  }\n\n  tick = () => {\n    const { getStarter } = this.props;\n    const { seconds } = this.state;\n    if (seconds > 0) {\n      this.setState({ seconds: seconds - 1 });\n    } else {\n      clearInterval(this.timer);\n      getStarter();\n    }\n  }\n\n  render() {\n    const { seconds } = this.state;\n    const { gameMode } = this.props;\n    return (\n      <div className=\"modal-wrapper\" style={{ minHeight: '15vw', top: '-3vw' }}>\n        <div className=\"modalkey-body\">\n          <h3>\n            How to play?\n          </h3>\n          <div className=\"keymodal\">\n            <div className=\"keyplayer1\">\n              <h5>Player 1</h5>\n              <div>\n                <h6>move:</h6>\n                <img src=\"./assets/zqsd.png\" alt=\"zqsd\" />\n              </div>\n              <div>\n                <h6>action/attack:</h6>\n                <img src=\"./assets/tab.png\" alt=\"tab\" />\n              </div>\n            </div>\n            {gameMode === 'multiplayer'\n              ? (\n                <div className=\"keyplayer2\">\n                  <h5>Player 2</h5>\n                  <div>\n                    <h6>move:</h6>\n                    <img src=\"./assets/fleches.png\" alt=\"fleches\" />\n                  </div>\n                  <div>\n                    <h6>action/attack:</h6>\n                    <img src=\"./assets/espace.png\" alt=\"espace\" />\n                  </div>\n                </div>\n\n              )\n              : (undefined)\n            }\n          </div>\n          <h1>\n            {\n              seconds !== 0\n                ? seconds\n                : 'GO!'\n            }\n          </h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Starter;\n","import React, { Component } from 'react';\n\nclass KeyElement extends Component {\n  constructor(props) {\n    super(props);\n    this.style = {\n      opacity: 0.32,\n    };\n  }\n\n  render() {\n    const { isCaught, typeOfKey } = this.props;\n    if (isCaught) {\n      this.style.opacity = 1;\n    } else {\n      this.style.opacity = 0.32;\n    }\n    return (\n      <React.Fragment>\n        <div className=\"keyCircle\">\n          <img src={`./assets/items/${typeOfKey}.png`} className=\"keyElement\" style={{ ...this.style }} alt=\"Collected keys\" />\n        </div>\n        <div className=\"separator\" />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default KeyElement;\n","import React, { Component } from 'react';\nimport KeyElement from './KeyElement';\nimport './KeysBar.css';\n\nclass KeysBar extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      collectedKeys, numberOfKeys, finalDoorID, playerNumber,\n    } = this.props;\n    this.tab = new Array(numberOfKeys).fill(false);\n    this.style = {\n      opacity: 1,\n      display: 'inline',\n      width: '40%',\n      marginTop: '30%',\n      position: 'absolute',\n      left: '30%',\n    };\n    this.styleDoor = {\n      backgroundImage: `url(${`./assets/items/${finalDoorID}.png`})`,\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: '100%,contain',\n      opacity: 0.6,\n    };\n    if (collectedKeys === numberOfKeys) {\n      this.styleDoor.opacity = 1;\n      this.style.display = 'none';\n    }\n    if (playerNumber === 'player1') {\n      this.keyBarclassName = 'keysBar1';\n      this.keyElementClassName = 'keyElement1';\n    } else {\n      this.keyBarclassName = 'keysBar2';\n      this.keyElementClassName = 'keyElement2';\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { collectedKeys, numberOfKeys } = this.props;\n    if (collectedKeys === numberOfKeys) {\n      this.styleDoor.opacity = 1;\n      this.style.display = 'none';\n    }\n    if (collectedKeys < nextProps.collectedKeys) {\n      for (let i = 0; i < nextProps.collectedKeys; i += 1) {\n        this.tab[i] = true;\n      }\n    } else {\n      for (let i = numberOfKeys - 1; i >= collectedKeys; i -= 1) {\n        this.tab[i] = false;\n      }\n    }\n  }\n\n  render() {\n    const { typeOfKey } = this.props;\n    return (\n      <div className={this.keyBarclassName}>\n        {this.tab.map((boolean, index) => (\n          <div className={this.keyElementClassName} key={`KeyElement-${index + 1}`}>\n            <KeyElement index={index} isCaught={boolean} typeOfKey={typeOfKey} />\n          </div>\n        ))}\n        <div className=\"bigKeyCircle\" style={{ ...this.styleDoor }}>\n          <img src=\"./assets/capacities/cadenas.png\" style={{ ...this.style }} alt=\"Final door\" />\n        </div>\n      </div>\n    );\n  }\n}\nexport default KeysBar;\n","import React, { Component } from 'react';\nimport Board from './Board';\nimport Player from './Player';\nimport EndingGame from './EndingGame';\nimport Chrono from './Chrono';\nimport Starter from './Starter';\nimport KeysBar from './KeysBar';\nimport './Game.css';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    const { location } = props;\n    this.leveltype = 'default';\n    this.selectedlevel = 'Level 1';\n    if (location.state) {\n      this.leveltype = location.state.leveltype;\n      this.selectedlevel = location.state.levelsolo;\n    }\n    if (this.leveltype === 'default') {\n      this.level = JSON.parse(localStorage.getItem('GameData')).default.levels.solo[this.selectedlevel];\n    }\n    if (this.leveltype === 'custom') {\n      this.level = JSON.parse(localStorage.getItem('PokemazeCustomLevels'))[this.selectedlevel];\n    }\n    this.getPlayerPos = this.getPlayerPos.bind(this);\n    this.getTime = this.getTime.bind(this);\n    this.playerAction = this.playerAction.bind(this);\n    this.keysToCollect = 0;\n    // Creates projectiles matrix\n    const projectiles = [];\n    for (let i = 0; i < this.level.tiles.length; i += 1) {\n      projectiles.push([]);\n      for (let j = 0; j < this.level.tiles[i].length; j += 1) {\n        projectiles[i].push('000');\n      }\n    }\n    for (let i = 0; i < this.level.items.length; i += 1) {\n      for (let j = 0; j < this.level.items[i].length; j += 1) {\n        if (parseInt(this.level.items[i][j], 10) >= 900\n          && parseInt(this.level.items[i][j], 10) <= 999) {\n          this.finalDoorID = this.level.items[i][j];\n        }\n        if (parseInt(this.level.items[i][j], 10) >= 2\n          && parseInt(this.level.items[i][j], 10) <= 19) {\n          this.keysToCollect += 1;\n          this.typeOfKey = this.level.items[i][j];\n        }\n      }\n    }\n    this.player1 = {\n      posX: null,\n      posY: null,\n      collectedKeys: 0,\n    };\n    this.randomPokemon = Math.ceil(Math.random() * Math.floor(151));\n    this.state = {\n      start: false,\n      level: JSON.parse(JSON.stringify(this.level)),\n      projectiles,\n      pokemon: undefined,\n      winner: undefined,\n      isWinner: false,\n      isLoser: false,\n      ongoingGame: true,\n      tutoWinner: false,\n    };\n  }\n\n  componentWillMount() {\n    this.getPokemon();\n  }\n\n  getPokemon() {\n    fetch(`https://pokeapi.co/api/v2/pokemon/${this.randomPokemon}`)\n      .then(response => response.json())\n      .then((data) => {\n        this.setState({\n          pokemon: data,\n        });\n      });\n  }\n\n  getStarter = () => {\n    this.setState({ start: true });\n  }\n\n  getPlayerPos(x, y, player) {\n    this[player].posX = x;\n    this[player].posY = y;\n    const { level } = this.state;\n\n    // verify if player has caught the pokeball\n    if (!level.isTuto && level.items[this[player].posY][this[player].posX] === '001') {\n      this.setState({\n        winner: player,\n        isWinner: true,\n        ongoingGame: false,\n      });\n      this.setWonPokemon();\n    }\n    if (level.isTuto && level.items[this[player].posY][this[player].posX] === '001') {\n      this.setState({\n        tutoWinner: true,\n      });\n    }\n    // change the trap\n    if (level.tiles[this[player].posY][this[player].posX] === '009') {\n      level.tiles[this[player].posY][this[player].posX] = '405';\n      this.setState({ level });\n    }\n    // verify if player has caught KeysToCollect\n    if (level.items[this[player].posY][this[player].posX] === level.typeOfKey) {\n      this[player].collectedKeys += 1;\n      level.items[this[player].posY][this[player].posX] = '000';\n      this.setState({ level });\n      // Open final door when all keys collected\n      if (this[player].collectedKeys === this.keysToCollect) {\n        this.openFinalDoor();\n      }\n    }\n  }\n\n  getTime(count) {\n    this.timer = count;\n    if (count === 0) {\n      this.setState({\n        isLoser: true,\n        ongoingGame: false,\n      });\n    }\n  }\n\n\n  setWonPokemon = () => {\n    const { isWinner, pokemon, winner } = this.state;\n    let pokemonType = '';\n    if (pokemon.types) {\n      if (pokemon.types[1]) {\n        pokemonType = pokemon.types[1].type.name;\n      } else {\n        pokemonType = pokemon.types[0].type.name;\n      }\n    }\n    if (isWinner) {\n      const newPokemon = { name: pokemon.name, type: pokemonType };\n      let winnerName = 'winner';\n      if (winner === 'player1') {\n        winnerName = JSON.parse(localStorage.getItem('connectedPlayer'));\n      }\n      if (localStorage.getItem(winnerName)) {\n        const actualPlayer = JSON.parse(localStorage.getItem(winnerName));\n        actualPlayer.pokemons.push(newPokemon);\n        localStorage.setItem(winnerName, JSON.stringify(actualPlayer));\n      }\n    }\n  }\n\n  playerAction(y, x) {\n    const { level } = this.state;\n    // Switches lever ON/OFF: even=> item+1, odd=> item-1\n    // Example: Lever(id: 700) becomes 701. Lever (id: 701) becomes 700\n    // AND\n    // Mutates the corresponding gate(s)\n    // Example: Lever 700 becomes 701, changing item(s) 800 to 801, and vice versa\n    if (parseInt(level.items[y][x], 10) % 2 === 0) {\n      const switchedLever = parseInt(level.items[y][x], 10) + 1;\n      level.items[y][x] = `${switchedLever}`;\n      for (let i = 0; i < level.items.length; i += 1) {\n        for (let j = 0; j < level.items[i].length; j += 1) {\n          if (parseInt(level.items[i][j], 10) === switchedLever + 99) {\n            const switchedDoor = parseInt(level.items[i][j], 10) + 1;\n            level.items[i][j] = `${switchedDoor}`;\n          } else if (parseInt(level.items[i][j], 10) === switchedLever + 100) {\n            const switchedDoor = parseInt(level.items[i][j], 10) - 1;\n            level.items[i][j] = `${switchedDoor}`;\n          }\n        }\n      }\n    } else {\n      const switchedLever = parseInt(level.items[y][x], 10) - 1;\n      level.items[y][x] = `${switchedLever}`;\n      for (let i = 0; i < level.items.length; i += 1) {\n        for (let j = 0; j < level.items[i].length; j += 1) {\n          if (parseInt(level.items[i][j], 10) === switchedLever + 101) {\n            const switchedDoor = parseInt(level.items[i][j], 10) - 1;\n            level.items[i][j] = `${switchedDoor}`;\n          } else if (parseInt(level.items[i][j], 10) === switchedLever + 100) {\n            const switchedDoor = parseInt(level.items[i][j], 10) + 1;\n            level.items[i][j] = `${switchedDoor}`;\n          }\n        }\n      }\n    }\n    this.setState({ level });\n  }\n\n  openFinalDoor() {\n    const { level } = this.state;\n    for (let i = 0; i < level.items.length; i += 1) {\n      for (let j = 0; j < level.items[i].length; j += 1) {\n        if (parseInt(level.items[i][j], 10) >= 900) {\n          level.items[i][j] = '000';\n          this.setState({ level });\n        }\n      }\n    }\n    this.finalDoorOpened = true;\n  }\n\n\n  render() {\n    const {\n      start, isWinner, isLoser, pokemon, ongoingGame, level, winner, tutoWinner, projectiles,\n    } = this.state;\n    return (\n      <div className=\"Game\">\n        { start\n          ? <Chrono count={level.timer} getTime={this.getTime} isWinner={isWinner} />\n          : undefined\n        }\n        {isWinner || isLoser || tutoWinner\n          ? <EndingGame className=\"endgame\" tutoWinner={tutoWinner} winner={winner} isWinner={isWinner} isLoser={isLoser} pokemon={pokemon} timer={this.timer} levelName={this.selectedlevel} gameMode=\"solo\" />\n          : null\n        }\n        {\n          !start\n            ? <Starter getStarter={this.getStarter} gameMode=\"solo\" />\n            : null\n        }\n        <div className=\"gameContainer\">\n\n          <Board tiles={level.tiles} items={level.items} projectiles={projectiles} />\n          <Player\n            start={start}\n            ongoingGame={ongoingGame}\n            tiles={level.tiles}\n            items={level.items}\n            projectiles={projectiles}\n            startingPositions={level.startingPositions.player1}\n            getPlayerPos={this.getPlayerPos}\n            playerAction={this.playerAction}\n            className=\"player\"\n            playerNumber=\"player1\"\n          />\n        </div>\n        <div className=\"keyBar\">\n          <KeysBar\n            collectedKeys={this.player1.collectedKeys}\n            finalDoorID={this.finalDoorID}\n            typeOfKey={this.typeOfKey}\n            numberOfKeys={this.keysToCollect}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\n\nclass Capacity extends Component {\n  constructor(props) {\n    super(props);\n    const level = props.name.slice(-1);\n    this.levelIcons = [];\n    for (let i = 0; i < 3; i += 1) {\n      if (i < level) {\n        this.levelIcons.push('star');\n      } else {\n        this.levelIcons.push('emptyStar');\n      }\n    }\n    if (this.levelIcons[0] === 'emptyStar') {\n      this.levelIcons = [];\n    }\n    this.capacityIcon = props.name.slice(0, -1);\n    this.maxtimer = props.maxtimer;\n    this.name = props.name;\n    switch (this.capacityIcon) {\n      case 'invisibility': {\n        this.capacityIcon = 'ghost';\n        break;\n      }\n      case 'punch': {\n        this.capacityIcon = 'fighting';\n        break;\n      }\n      case 'psychic': {\n        this.capacityIcon = 'psychic';\n        break;\n      }\n      case 'ice': {\n        this.capacityIcon = 'ice';\n        break;\n      }\n      case 'fire': {\n        this.capacityIcon = 'fire';\n        break;\n      }\n      case 'electric': {\n        this.capacityIcon = 'electric';\n        break;\n      }\n      case 'fighting': {\n        this.capacityIcon = 'fighting';\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n\n  shouldComponentUpdate(nextProps) {\n    const { timer } = this.props;\n    if (nextProps.timer === 0 && timer === 0) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const { timer } = this.props;\n    const progress = timer * 100 / this.maxtimer;\n    return (\n      <div style={{\n        backgroundImage: `url(\"./assets/pokemons/elements/${this.capacityIcon}.png\")`,\n        backgroundSize: 'contain',\n        width: '100%',\n        height: '100%',\n      }}\n      >\n        <div style={{\n          backgroundImage: `url(\"./assets/pokemons/elements/${this.capacityIcon}.png\")`,\n          backgroundSize: 'contain',\n          width: '100%',\n          height: '100%',\n        }}\n        >\n          <div style={{\n            height: `${progress}%`,\n            filter: 'grayscale(1)',\n            zIndex: '2',\n            backgroundImage: `url(\"./assets/pokemons/elements/${this.capacityIcon}.png\")`,\n            backgroundSize: '100%',\n            transition: '1000ms linear',\n          }}\n          />\n        </div>\n        <div className=\"starsContainer\">\n          {\n            this.levelIcons.map((star, index) => (\n              <div\n                className={star}\n                key={`starId-${index + 1}`}\n                alt={star}\n              />\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Capacity;\n","import React, { Component } from 'react';\nimport Capacity from './Capacity';\nimport './Capacities.css';\n\nclass Capacities extends Component {\n  constructor(props) {\n    super(props);\n    this.capacities = props.capacities;\n    this.state = {\n    };\n  }\n\n  render() {\n    const {\n      playerNumber, timers, maxtimers, capacities,\n    } = this.props;\n    let capacitiesClassName;\n    if (playerNumber === 'player1') {\n      capacitiesClassName = 'Capacities1';\n    }\n    if (playerNumber === 'player2') {\n      capacitiesClassName = 'Capacities2';\n    }\n    return (\n      <div className={capacitiesClassName}>\n        {\n          this.capacities.map((capacity, index) => <Capacity className=\"Capacity\" name={capacities[index]} timer={timers[index]} maxtimer={maxtimers[index]} key={`capacityId-${index + 1}`} />)\n        }\n      </div>\n    );\n  }\n}\n\nexport default Capacities;\n","import React, { Component } from 'react';\nimport Player from './Player';\nimport Capacities from './Capacities';\n\nclass Players extends Component {\n  constructor(props) {\n    super(props);\n    // Initiate abilities timers\n    // Ability timer = 10s - (ability level * 2)\n    // Uses a string (\"punch2\" -> punch level 2 -> 10 - 2*2 -> 6s cooldown)\n    this.player1timers = [];\n    this.player2timers = [];\n    for (let i = 0; i < props.capacities1.length; i += 1) {\n      this.player1timers.push(10 - (parseInt(props.capacities1[i].slice(-1), 10) * 2));\n    }\n    for (let i = 0; i < props.capacities2.length; i += 1) {\n      this.player2timers.push(10 - (parseInt(props.capacities2[i].slice(-1), 10) * 2));\n    }\n    this.state = {\n      player1: {\n        x: props.startingPositions.player1.x,\n        y: props.startingPositions.player1.y,\n        gettingTargeted: null,\n      },\n      player2: {\n        x: props.startingPositions.player2.x,\n        y: props.startingPositions.player2.y,\n        gettingTargeted: null,\n      },\n      player1timers: [...this.player1timers],\n      player2timers: [...this.player2timers],\n    };\n  }\n\n  componentWillMount() {\n    setInterval(() => this.updateTimers(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateTimers);\n  }\n\n  updateTimers = () => {\n    const { player1timers, player2timers } = this.state;\n    for (let i = 0; i < player1timers.length; i += 1) {\n      if (player1timers[i] > 0) {\n        player1timers[i] -= 1;\n      }\n    }\n    for (let i = 0; i < player2timers.length; i += 1) {\n      if (player2timers[i] > 0) {\n        player2timers[i] -= 1;\n      }\n    }\n    this.setState({ player1timers, player2timers });\n  }\n\n  multiplayerCoordinates = (x, y, player) => {\n    this.setState({\n      [player]: { x, y },\n    });\n  }\n\n  multiplayerActions = (player, enemy, capacity, directionX, directionY) => {\n    const { player1timers, player2timers } = this.state;\n    const [first1] = this.player1timers;\n    const [first2] = this.player2timers;\n\n    if (player === 'player1') {\n      player1timers[0] = first1;\n      this.setState({ player1timers });\n    }\n    if (player === 'player2') {\n      player2timers[0] = first2;\n      this.setState({ player2timers });\n    }\n    if (capacity) {\n      // Traps/projectiles don't directly affect other player\n      // => callback in MultiplayerGame to alter matrices\n      if (capacity.slice(0, -1) !== 'fire'\n        && capacity.slice(0, -1) !== 'dragon'\n        && capacity.slice(0, -1) !== 'electric'\n        && capacity.slice(0, -1) !== 'ice'\n        && capacity.slice(0, -1) !== 'water'\n        && capacity.slice(0, -1) !== 'fairy') {\n        this.setState({\n          [enemy]: {\n            gettingTargeted: {\n              byCapacity: capacity,\n              directionX,\n              directionY,\n            },\n          },\n        });\n      }\n    }\n  }\n\n  resetActions = (player) => {\n    this.setState({ [player]: { gettingTargeted: null } });\n  }\n\n  render() {\n    const {\n      ongoingGame, tiles, items, startingPositions, getPlayerPos, playerAction,\n      finalDoorOpened1, finalDoorOpened2, capacities1, capacities2, projectiles,\n      pokemon1, pokemon2, transferKey, start,\n    } = this.props;\n    const {\n      player1, player2, player1timers, player2timers,\n    } = this.state;\n    return (\n      <div>\n        <Player\n          start={start}\n          ongoingGame={ongoingGame}\n          tiles={tiles}\n          items={items}\n          projectiles={projectiles}\n          startingPositions={startingPositions.player1}\n          getPlayerPos={getPlayerPos}\n          playerAction={playerAction}\n          transferKey={transferKey}\n          finalDoorOpened={finalDoorOpened1}\n          player={player1}\n          enemy={player2}\n          pokemon={pokemon1}\n          multiplayerActions={this.multiplayerActions}\n          resetActions={this.resetActions}\n          multiplayerCoordinates={this.multiplayerCoordinates}\n          capacities={capacities1}\n          timers={player1timers}\n          gameMode=\"multiplayer\"\n          playerNumber=\"player1\"\n          className=\"player\"\n        />\n        <Player\n          start={start}\n          ongoingGame={ongoingGame}\n          tiles={tiles}\n          items={items}\n          projectiles={projectiles}\n          startingPositions={startingPositions.player2}\n          getPlayerPos={getPlayerPos}\n          playerAction={playerAction}\n          transferKey={transferKey}\n          finalDoorOpened={finalDoorOpened2}\n          player={player2}\n          enemy={player1}\n          pokemon={pokemon2}\n          multiplayerActions={this.multiplayerActions}\n          resetActions={this.resetActions}\n          multiplayerCoordinates={this.multiplayerCoordinates}\n          capacities={capacities2}\n          timers={player2timers}\n          gameMode=\"multiplayer\"\n          playerNumber=\"player2\"\n          className=\"player\"\n        />\n        <Capacities\n          playerNumber=\"player1\"\n          capacities={capacities1}\n          timers={player1timers}\n          maxtimers={this.player1timers}\n        />\n        <Capacities\n          playerNumber=\"player2\"\n          capacities={capacities2}\n          timers={player2timers}\n          maxtimers={this.player2timers}\n        />\n      </div>\n\n    );\n  }\n}\n\nexport default Players;\n","import React, { Component } from 'react';\nimport Board from './Board';\nimport Players from './Players';\nimport EndingGame from './EndingGame';\nimport KeysBar from './KeysBar';\nimport Starter from './Starter';\nimport './Game.css';\n\n/*\n<img\nsrc={`https://projectpokemon.org/images/normal-sprite/${pokemon1}.gif`}\nalt={pokemon1}\n/> */\n\nclass MultiplayerGame extends Component {\n  constructor(props) {\n    super(props);\n    this.getPlayerPos = this.getPlayerPos.bind(this);\n    this.playerAction = this.playerAction.bind(this);\n    this.keysToCollect = 0;\n    this.projectiles = {};\n    const {\n      level, pokemon1, pokemon2, capacity1, capacity2,\n    } = props;\n    // Creates projectiles matrix\n    const projectiles = [];\n    for (let i = 0; i < level.tiles.length; i += 1) {\n      projectiles.push([]);\n      for (let j = 0; j < level.tiles[i].length; j += 1) {\n        projectiles[i].push('000');\n      }\n    }\n    // Scans levels for final door and determines keys to collect\n    for (let i = 0; i < level.items.length; i += 1) {\n      for (let j = 0; j < level.items[i].length; j += 1) {\n        if (parseInt(level.items[i][j], 10) >= 900\n          && parseInt(level.items[i][j], 10) <= 999) {\n          this.finalDoorID = level.items[i][j];\n        }\n        if (parseInt(level.items[i][j], 10) >= 2\n          && parseInt(level.items[i][j], 10) <= 19) {\n          this.keysToCollect += 1;\n          this.typeOfKey = level.items[i][j];\n        }\n      }\n    }\n    this.keysToCollect = Math.floor(this.keysToCollect / 2);\n    this.player1 = {\n      posX: null,\n      posY: null,\n      collectedKeys: 0,\n      capacities: [capacity1],\n      // capacities: [capacity1],\n      pokemon: pokemon1,\n    };\n    this.player2 = {\n      posX: null,\n      posY: null,\n      collectedKeys: 0,\n      capacities: [capacity2],\n      // capacities: [capacity2],\n      pokemon: pokemon2,\n    };\n    this.randomPokemon = Math.ceil(Math.random() * Math.floor(151));\n    this.state = {\n      start: false,\n      finalDoorOpened1: false,\n      finalDoorOpened2: false,\n      level,\n      projectiles,\n      winner: undefined,\n      pokemon: undefined,\n      isWinner: false,\n      isLoser: false,\n      ongoingGame: true,\n    };\n  }\n\n  componentWillMount() {\n    this.getPokemon();\n  }\n\n  getPokemon() {\n    fetch(`https://pokeapi.co/api/v2/pokemon/${this.randomPokemon}`)\n      .then(response => response.json())\n      .then((data) => {\n        this.setState({\n          pokemon: data,\n        });\n      });\n  }\n\n  getStarter = () => {\n    this.setState({ start: true });\n  }\n\n  getPlayerPos(x, y, player) {\n    this[player].posX = x;\n    this[player].posY = y;\n    const { level } = this.state;\n    // verify if player has caught the pokeball\n    if (level.items[this[player].posY][this[player].posX] === '001') {\n      this.setState({\n        isWinner: true,\n        winner: player,\n        ongoingGame: false,\n      });\n      this.setWonPokemon();\n    }\n    // change the trap\n    if (level.tiles[this[player].posY][this[player].posX] === '009') {\n      level.tiles[this[player].posY][this[player].posX] = '405';\n      this.setState({ level });\n    }\n    // verify if player has caught KeysToCollect\n    if (level.items[this[player].posY][this[player].posX] === level.typeOfKey) {\n      if (this[player].collectedKeys < this.keysToCollect) {\n        this[player].collectedKeys += 1;\n        this.increment = true;\n        level.items[this[player].posY][this[player].posX] = '000';\n        this.setState({ level });\n        // Open final door when all keys collected\n        if (this[player].collectedKeys === this.keysToCollect) {\n          if (player === 'player1') {\n            this.setState({ finalDoorOpened1: true });\n          }\n          if (player === 'player2') {\n            this.setState({ finalDoorOpened2: true });\n          }\n        }\n      }\n    }\n  }\n\n  transferKey = (player, enemy) => {\n    if (this[player].collectedKeys > 0 && this[enemy].collectedKeys < this.keysToCollect) {\n      this[player].collectedKeys -= 1;\n      this.increment = false;\n      this[enemy].collectedKeys += 1;\n      if (this.player1.collectedKeys < this.keysToCollect) {\n        this.setState({ finalDoorOpened1: false });\n      } else {\n        this.setState({ finalDoorOpened1: true });\n      }\n      if (this.player2.collectedKeys < this.keysToCollect) {\n        this.setState({ finalDoorOpened2: false });\n      } else {\n        this.setState({ finalDoorOpened2: true });\n      }\n    }\n  }\n\n  setWonPokemon = () => {\n    const { isWinner, pokemon, winner } = this.state;\n    let pokemonType = '';\n    if (pokemon.types) {\n      if (pokemon.types[1]) {\n        pokemonType = pokemon.types[1].type.name;\n      } else {\n        pokemonType = pokemon.types[0].type.name;\n      }\n    }\n    if (isWinner) {\n      const newPokemon = { name: pokemon.name, type: pokemonType };\n      let winnerName = 'winner';\n      if (winner === 'player1') {\n        winnerName = JSON.parse(localStorage.getItem('connectedPlayer'));\n      }\n      if (winner === 'player2') {\n        winnerName = JSON.parse(localStorage.getItem('connectedPlayer2'));\n      }\n      if (localStorage.getItem(winnerName)) {\n        const actualPlayer = JSON.parse(localStorage.getItem(winnerName));\n        actualPlayer.pokemons.push(newPokemon);\n        localStorage.setItem(winnerName, JSON.stringify(actualPlayer));\n      }\n    }\n  }\n\n  playerAction(y, x, capacity, directionX, directionY) {\n    const { level } = this.state;\n    // Switches lever ON/OFF: even=> item+1, odd=> item-1\n    // Example: Lever(id: 700) becomes 701. Lever (id: 701) becomes 700\n    // AND\n    // Mutates the corresponding gate(s)\n    // Example: Lever 700 becomes 701, changing item(s) 800 to 801, and vice versa\n    if (parseInt(level.items[y][x], 10) >= 700\n      && parseInt(level.items[y][x], 10) <= 799) {\n      if (parseInt(level.items[y][x], 10) % 2 === 0) {\n        const switchedLever = parseInt(level.items[y][x], 10) + 1;\n        level.items[y][x] = `${switchedLever}`;\n        for (let i = 0; i < level.items.length; i += 1) {\n          for (let j = 0; j < level.items[i].length; j += 1) {\n            if (parseInt(level.items[i][j], 10) === switchedLever + 99) {\n              const switchedDoor = parseInt(level.items[i][j], 10) + 1;\n              level.items[i][j] = `${switchedDoor}`;\n            } else if (parseInt(level.items[i][j], 10) === switchedLever + 100) {\n              const switchedDoor = parseInt(level.items[i][j], 10) - 1;\n              level.items[i][j] = `${switchedDoor}`;\n            }\n          }\n        }\n      } else {\n        const switchedLever = parseInt(level.items[y][x], 10) - 1;\n        level.items[y][x] = `${switchedLever}`;\n        for (let i = 0; i < level.items.length; i += 1) {\n          for (let j = 0; j < level.items[i].length; j += 1) {\n            if (parseInt(level.items[i][j], 10) === switchedLever + 101) {\n              const switchedDoor = parseInt(level.items[i][j], 10) - 1;\n              level.items[i][j] = `${switchedDoor}`;\n            } else if (parseInt(level.items[i][j], 10) === switchedLever + 100) {\n              const switchedDoor = parseInt(level.items[i][j], 10) + 1;\n              level.items[i][j] = `${switchedDoor}`;\n            }\n          }\n        }\n      }\n    }\n    if (capacity) {\n      const { projectiles } = this.state;\n      // projectiles! :-)\n      if (capacity.slice(0, -1) === 'fire' || capacity.slice(0, -1) === 'dragon') {\n        projectiles[y][x] = '001';\n        const fireballId = Math.floor(Math.random() * 99999);\n        this.projectiles[fireballId] = { y, x };\n        this.projectiles[fireballId].running = setInterval(() => {\n          this.projectiles[fireballId].y += directionY;\n          this.projectiles[fireballId].x += directionX;\n          if (this.projectiles[fireballId].y < 0\n            || this.projectiles[fireballId].y >= projectiles.length\n            || this.projectiles[fireballId].x < 0\n            || this.projectiles[fireballId].x >= projectiles[this.projectiles[fireballId].y].length\n            || projectiles[this.projectiles[fireballId].y][this.projectiles[fireballId].x] !== '000') {\n            clearInterval(this.projectiles[fireballId].running);\n            projectiles[this.projectiles[fireballId].y - directionY * 2][this.projectiles[fireballId].x - directionX * 2] = '000';\n            this.setState({ projectiles });\n            setTimeout(() => {\n              projectiles[this.projectiles[fireballId].y - directionY][this.projectiles[fireballId].x - directionX] = '000';\n              this.setState({ projectiles });\n            }, 3000);\n          } else {\n            setTimeout(() => {\n              projectiles[this.projectiles[fireballId].y - directionY][this.projectiles[fireballId].x - directionX] = '000';\n            }, 50);\n            projectiles[this.projectiles[fireballId].y][this.projectiles[fireballId].x] = '001';\n            this.setState({ projectiles });\n          }\n        }, 200);\n      }\n      // Lightning bolts\n      if (capacity.slice(0, -1) === 'electric' || capacity.slice(0, -1) === 'fairy') {\n        projectiles[y][x] = '002';\n        const lightningBoltId = Math.floor(Math.random() * 99999);\n        this.projectiles[lightningBoltId] = { y, x };\n        this.projectiles[lightningBoltId].running = setInterval(() => {\n          this.projectiles[lightningBoltId].y += directionY;\n          this.projectiles[lightningBoltId].x += directionX;\n          if (this.projectiles[lightningBoltId].y < 0\n            || this.projectiles[lightningBoltId].y >= projectiles.length\n            || this.projectiles[lightningBoltId].x < 0\n            || this.projectiles[lightningBoltId].x\n            >= projectiles[this.projectiles[lightningBoltId].y].length\n            || projectiles[this.projectiles[lightningBoltId].y][this.projectiles[lightningBoltId].x] !== '000') {\n            clearInterval(this.projectiles[lightningBoltId].running);\n            setTimeout(() => {\n              projectiles[this.projectiles[lightningBoltId].y - directionY][this.projectiles[lightningBoltId].x - directionX] = '000';\n              this.setState({ projectiles });\n            }, 4000);\n          } else {\n            projectiles[this.projectiles[lightningBoltId].y - directionY][this.projectiles[lightningBoltId].x - directionX] = '000';\n            projectiles[this.projectiles[lightningBoltId].y][this.projectiles[lightningBoltId].x] = '002';\n            this.setState({ projectiles });\n          }\n        }, 500);\n      }\n      // Iceball\n      if (capacity.slice(0, -1) === 'ice' || capacity.slice(0, -1) === 'water') {\n        projectiles[y][x] = '100';\n        const iceballId = Math.floor(Math.random() * 99999);\n        this.projectiles[iceballId] = { y, x };\n        this.projectiles[iceballId].running = setInterval(() => {\n          this.projectiles[iceballId].y += directionY;\n          this.projectiles[iceballId].x += directionX;\n          if (this.projectiles[iceballId].y < 0\n            || this.projectiles[iceballId].y >= projectiles.length\n            || this.projectiles[iceballId].x < 0\n            || this.projectiles[iceballId].x\n            >= projectiles[this.projectiles[iceballId].y].length\n            || projectiles[this.projectiles[iceballId].y][this.projectiles[iceballId].x] !== '000') {\n            clearInterval(this.projectiles[iceballId].running);\n            setTimeout(() => {\n              projectiles[this.projectiles[iceballId].y - directionY][this.projectiles[iceballId].x - directionX] = '101';\n              this.setState({ projectiles });\n            }, 100);\n            setTimeout(() => {\n              projectiles[this.projectiles[iceballId].y - directionY][this.projectiles[iceballId].x - directionX] = '000';\n              this.setState({ projectiles });\n            }, 5000);\n          } else {\n            projectiles[this.projectiles[iceballId].y - directionY][this.projectiles[iceballId].x - directionX] = '000';\n            projectiles[this.projectiles[iceballId].y][this.projectiles[iceballId].x] = '100';\n            this.setState({ projectiles });\n          }\n        }, 200);\n      }\n    }\n    this.setState({ level });\n  }\n\n  render() {\n    const {\n      start, isWinner, isLoser, pokemon, ongoingGame, level,\n      winner, finalDoorOpened1, finalDoorOpened2, projectiles,\n    } = this.state;\n    return (\n      <div className=\"GameMultiplayer\">\n        {isWinner || isLoser\n          ? <EndingGame className=\"endgame\" winner={winner} isWinner={isWinner} isLoser={isLoser} pokemon={pokemon} gameMode=\"multiplayer\" />\n          : null\n        }\n        {\n            !start\n              ? <Starter getStarter={this.getStarter} gameMode=\"multiplayer\" />\n              : null\n          }\n        <div className=\"gameContainer\">\n          <Board tiles={level.tiles} items={level.items} projectiles={projectiles} />\n          <Players\n            start={start}\n            ongoingGame={ongoingGame}\n            tiles={level.tiles}\n            items={level.items}\n            projectiles={projectiles}\n            transferKey={this.transferKey}\n            startingPositions={level.startingPositions}\n            getPlayerPos={this.getPlayerPos}\n            playerAction={this.playerAction}\n            finalDoorOpened1={finalDoorOpened1}\n            finalDoorOpened2={finalDoorOpened2}\n            capacities1={this.player1.capacities}\n            capacities2={this.player2.capacities}\n            pokemon1={this.player1.pokemon}\n            pokemon2={this.player2.pokemon}\n          />\n        </div>\n        <div className=\"KeysBarMultiplayer\">\n          <KeysBar\n            collectedKeys={this.player1.collectedKeys}\n            finalDoorID={this.finalDoorID}\n            typeOfKey={this.typeOfKey}\n            numberOfKeys={this.keysToCollect}\n            playerNumber=\"player1\"\n            increment={this.increment}\n          />\n          <KeysBar\n            collectedKeys={this.player2.collectedKeys}\n            finalDoorID={this.finalDoorID}\n            typeOfKey={this.typeOfKey}\n            numberOfKeys={this.keysToCollect}\n            playerNumber=\"player2\"\n            increment={this.increment}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MultiplayerGame;\n","import React, { Component } from 'react';\nimport MultiplayerGame from './MultiplayerGame';\n\nclass Multiplayer extends Component {\n  constructor(props) {\n    super(props);\n    this.player1 = 'Player 1';\n    this.player2 = 'Player 2';\n    this.selection = '001';\n  }\n\n  render() {\n    let capacity1 = 'none';\n    let capacity2 = 'none';\n    let pokemon1 = 'none';\n    let pokemon2 = 'none';\n    let levelDuo = '001';\n    const { location } = this.props;\n    if (location.state) {\n      capacity1 = location.state.player1;\n      capacity2 = location.state.player2;\n      pokemon1 = location.state.mate1;\n      pokemon2 = location.state.mate2;\n      levelDuo = location.state.levelduo;\n    }\n    const selectedLevel = JSON.parse(localStorage.getItem('GameData')).default.levels.multiplayer[levelDuo];\n    return (\n      <div>\n        <MultiplayerGame\n          level={selectedLevel}\n          player1={this.player1}\n          player2={this.player2}\n          capacity1={capacity1}\n          capacity2={capacity2}\n          pokemon1={pokemon1}\n          pokemon2={pokemon2}\n        />\n      </div>\n    );\n  }\n}\n\n\nexport default Multiplayer;\n","import React, { Component } from 'react';\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { videoTrue } = this.props;\n    return (\n      <div>\n        <div className=\"modal-wrapper\" id=\"HomeModal\">\n          <div className=\"modal-body\">\n            <img\n              className=\"Cross\"\n              src=\"./assets/delete.png\"\n              alt=\"cross\"\n              role=\"presentation\"\n              onClick={videoTrue}\n            />\n            <video controls className=\"video\">\n              <source src=\"./assets/pokeVideo.mp4\" type=\"video/mp4\" />\n              <track default kind=\"captions\" src=\"#\" />\n            </video>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Video;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\nimport Video from './Video';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.charImagesList = ['guy', 'female', 'black', 'blue', 'guyCape', 'red', 'white', 'pinkHatLady'];\n    this.data = {\n      pokemons: [],\n      charImg: 'guy',\n    };\n    this.state = {\n      userOne: '',\n      userOneImg: 'guy',\n      userTwo: '',\n      userTwoImg: 'guy',\n      playerOneConnected: false,\n      playerTwoConnected: false,\n      test: false,\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    if (localStorage.getItem('connectedPlayer')) {\n      const charName = JSON.parse(localStorage.getItem('connectedPlayer'));\n      const charData = JSON.parse(localStorage.getItem(charName));\n      const img = charData.charImg;\n      this.setState({\n        userOne: charName,\n        userOneImg: img,\n        playerOneConnected: true,\n      });\n    }\n    if (localStorage.getItem('connectedPlayer2')) {\n      const charName = JSON.parse(localStorage.getItem('connectedPlayer2'));\n      const charData = JSON.parse(localStorage.getItem(charName));\n      const img = charData.charImg;\n      this.setState({\n        userTwo: charName,\n        userTwoImg: img,\n        playerTwoConnected: true,\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.switchButton();\n  }\n\n  onChange(event) {\n    const user = event.target.id;\n    this.setState({\n      [user]: event.target.value,\n    });\n  }\n\n  switchButton = () => {\n    if (localStorage.getItem('connectedPlayer')) {\n      document.getElementById('solo').disabled = false;\n    } else {\n      document.getElementById('solo').disabled = true;\n    }\n    if (localStorage.getItem('connectedPlayer') && localStorage.getItem('connectedPlayer2')) {\n      document.getElementById('multi').disabled = false;\n    } else {\n      document.getElementById('multi').disabled = true;\n    }\n  }\n\n  changeCharImgOne = (num) => {\n    const { userOneImg } = this.state;\n    const currentIndex = this.charImagesList.indexOf(userOneImg);\n    let nextIndex = currentIndex + num;\n    if (nextIndex < 0) {\n      nextIndex = this.charImagesList.length - 1;\n    }\n    if (nextIndex > this.charImagesList.length - 1) {\n      nextIndex = 0;\n    }\n    const charName = JSON.parse(localStorage.getItem('connectedPlayer'));\n    const charData = JSON.parse(localStorage.getItem(charName));\n    charData.charImg = this.charImagesList[nextIndex];\n    localStorage.setItem(charName, JSON.stringify(charData));\n    this.setState({ userOneImg: this.charImagesList[nextIndex] });\n  }\n\n  changeCharImgTwo = (num) => {\n    const { userTwoImg } = this.state;\n    const currentIndex = this.charImagesList.indexOf(userTwoImg);\n    let nextIndex = currentIndex + num;\n    if (nextIndex < 0) {\n      nextIndex = this.charImagesList.length - 1;\n    }\n    if (nextIndex > this.charImagesList.length - 1) {\n      nextIndex = 0;\n    }\n    // this.charImagesList = ['guy', 'female'];\n    const charName = JSON.parse(localStorage.getItem('connectedPlayer2'));\n    const charData = JSON.parse(localStorage.getItem(charName));\n    charData.charImg = this.charImagesList[nextIndex];\n    localStorage.setItem(charName, JSON.stringify(charData));\n    this.setState({ userTwoImg: this.charImagesList[nextIndex] });\n  }\n\n  onSubmitOne = (event) => {\n    event.preventDefault();\n    const { userOne, playerOneConnected } = this.state;\n    if (!localStorage.getItem(userOne)) {\n      localStorage.setItem(userOne, JSON.stringify(this.data));\n    }\n    this.setState({ playerOneConnected: !playerOneConnected });\n    if (localStorage.getItem('connectedPlayer')) {\n      localStorage.setItem('connectedPlayer', JSON.stringify(userOne));\n    } else {\n      localStorage.setItem('connectedPlayer', JSON.stringify(userOne));\n    }\n    this.switchButton();\n  }\n\n  onDisconnectOne = (event) => {\n    event.preventDefault();\n    const { playerOneConnected } = this.state;\n    this.setState({ playerOneConnected: !playerOneConnected, userOne: '' });\n    localStorage.setItem('connectedPlayer', '');\n    this.switchButton();\n  }\n\n  onDisconnectTwo = (event) => {\n    event.preventDefault();\n    const { playerTwoConnected } = this.state;\n    this.setState({ playerTwoConnected: !playerTwoConnected, userTwo: '' });\n    localStorage.setItem('connectedPlayer2', '');\n    this.switchButton();\n  }\n\n\n  onSubmitTwo = (event) => {\n    event.preventDefault();\n    const { userTwo, playerTwoConnected } = this.state;\n    if (!localStorage.getItem(userTwo)) {\n      localStorage.setItem(userTwo, JSON.stringify(this.data));\n    }\n    this.setState({ playerTwoConnected: !playerTwoConnected });\n    if (localStorage.getItem('connectedPlayer2')) {\n      localStorage.setItem('connectedPlayer2', JSON.stringify(userTwo));\n    } else {\n      localStorage.setItem('connectedPlayer2', JSON.stringify(userTwo));\n    }\n    this.switchButton();\n  }\n\n  videoTrue = () => {\n    const { test } = this.state;\n    this.setState({\n      test: !test,\n    });\n  }\n\n  render() {\n    const {\n      userOne,\n      userTwo,\n      playerOneConnected,\n      playerTwoConnected,\n      test,\n      userOneImg,\n      userTwoImg,\n    } = this.state;\n    return (\n      <div className=\"home\">\n        {test ? <Video videoTrue={this.videoTrue} /> : null}\n        <div className=\"forms\">\n          {\n            playerOneConnected\n              ? (\n                <div\n                  className=\"form\"\n                >\n                  <h6>\n                    Player 1 :\n                    {' '}\n                    {userOne}\n                  </h6>\n                  <div className=\"changeCharacter\">\n                    <button\n                      className=\"changeCharacterImgButton1\"\n                      style={{\n                        backgroundImage: 'url(./assets/previous-arrow.png)',\n                      }}\n                      type=\"button\"\n                      value=\"userOne\"\n                      onClick={() => this.changeCharImgOne(-1)}\n                    />\n                    <div\n                      className=\"char\"\n                      style={{\n                        backgroundPosition: 'center',\n                        backgroundImage: `url(./assets/characters/${userOneImg}Bottom.png)`,\n                      }}\n                    />\n                    <button\n                      className=\"changeCharacterImgButton2\"\n                      style={{\n                        backgroundImage: 'url(./assets/next-arrow.png)',\n                      }}\n                      type=\"button\"\n                      value=\"userOne\"\n                      onClick={() => this.changeCharImgOne(1)}\n                    />\n                  </div>\n                  <form onSubmit={this.onDisconnectOne}>\n                    <input\n                      className=\"disconnectButton\"\n                      size=\"lg\"\n                      type=\"submit\"\n                      value=\"Disconnect\"\n                    />\n                  </form>\n                </div>\n              )\n              : (\n                <div\n                  className=\"form\"\n                >\n                  <h6>\n                    Player 1 :\n                  </h6>\n                  <form onSubmit={this.onSubmitOne}>\n                    <input\n                      onChange={this.onChange}\n                      type=\"text\"\n                      id=\"userOne\"\n                      name=\"title\"\n                      value={userOne}\n                    />\n                    <input\n                      className=\"connectButton\"\n                      size=\"lg\"\n                      type=\"submit\"\n                      value=\"Connect\"\n                    />\n                  </form>\n                </div>\n              )\n          }\n          {\n            playerTwoConnected\n              ? (\n                <div\n                  className=\"form\"\n                >\n                  <h6>\n                    Player 2 :\n                    {' '}\n                    {userTwo}\n                  </h6>\n                  <div className=\"changeCharacter\">\n                    <button\n                      className=\"changeCharacterImgButton3\"\n                      style={{\n                        backgroundImage: 'url(./assets/previous-arrow.png)',\n                      }}\n                      type=\"button\"\n                      value=\"userTwo\"\n                      onClick={() => this.changeCharImgTwo(-1)}\n                    />\n                    <div\n                      className=\"char\"\n                      style={{\n                        backgroundPosition: 'center',\n                        backgroundImage: `url(./assets/characters/${userTwoImg}Bottom.png)`,\n                      }}\n                    />\n                    <button\n                      className=\"changeCharacterImgButton4\"\n                      style={{\n                        backgroundImage: 'url(./assets/next-arrow.png)',\n                      }}\n                      type=\"button\"\n                      value=\"userTwo\"\n                      onClick={() => this.changeCharImgTwo(1)}\n                    />\n                  </div>\n                  <form onSubmit={this.onDisconnectTwo}>\n                    <input\n                      className=\"disconnectButton\"\n                      size=\"lg\"\n                      type=\"submit\"\n                      value=\"Disconnect\"\n                    />\n                  </form>\n                </div>\n              )\n              : (\n                <div\n                  className=\"form\"\n                >\n                  <h6>\n                    Player 2 :\n                  </h6>\n                  <form onSubmit={this.onSubmitTwo}>\n                    <input\n                      onChange={this.onChange}\n                      type=\"text\"\n                      id=\"userTwo\"\n                      name=\"title\"\n                      value={userTwo}\n                    />\n                    <input\n                      className=\"connectButton\"\n                      size=\"lg\"\n                      type=\"submit\"\n                      value=\"Connect\"\n                    />\n                  </form>\n                </div>\n              )\n          }\n        </div>\n        <div className=\"logoButtons\">\n          <div className=\"logo\">\n            <img className=\"imgLogo\" src=\"./assets/logopokemaze.png\" alt=\"logo\" />\n            <div className=\"intro\">\n              <img\n                src=\"./assets/play1.png\"\n                className=\"video1\"\n                role=\"presentation\"\n                alt=\"play\"\n                onClick={this.videoTrue}\n              />\n              <img\n                src=\"./assets/play2.png\"\n                className=\"video2\"\n                role=\"presentation\"\n                alt=\"play\"\n                onClick={this.videoTrue}\n              />\n            </div>\n          </div>\n          <div className=\"buttonContainerHome\">\n            <Link\n              to=\"/solo-game\"\n            >\n              <button\n                className=\"homeButton\"\n                id=\"solo\"\n                type=\"button\"\n                size=\"lg\"\n                style={{\n                  minWidth: '8em',\n                }}\n              >\n                Play solo\n              </button>\n            </Link>\n\n            <Link\n              to=\"/duo-game\"\n            >\n              <button\n                className=\"homeButton\"\n                id=\"multi\"\n                type=\"button\"\n                size=\"lg\"\n                style={{\n                  minWidth: '8em',\n                }}\n              >\n                Multiplayer\n              </button>\n            </Link>\n\n            <Link to=\"/pokeditor\">\n              <button\n                className=\"pokeditor\"\n                type=\"button\"\n                size=\"lg\"\n                style={{\n                  minWidth: '8em',\n                }}\n              >\n                <img src=\"./assets/pokeditor2.png\" alt=\"imgeditor\" />\n                {' '}\n                Pokeditor\n              </button>\n            </Link>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nconst PokeditorChooseTile = (props) => {\n  const { tiles, selectTile } = props;\n  return (\n    <div style={{ marginBottom: '5px' }}>\n      <p style={{ float: 'left', marginRight: '5px', textDecoration: 'underline' }}>Choose tile : </p>\n      <div>\n        {\n          tiles.map((file, index) => (\n            <button\n              type=\"button\"\n              style={{\n                backgroundImage: `url(${`./assets/tiles/${tiles[index]}.png`})`,\n                marginRight: '3px',\n              }}\n              className=\"Tile\"\n              value={file}\n              key={`tileButtonId-${index + 1}`}\n              onClick={selectTile}\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default PokeditorChooseTile;\n","import React from 'react';\n\nconst PokeditorChooseItem = (props) => {\n  const { items, selectItem } = props;\n  return (\n    <div style={{ marginBottom: '5px' }}>\n      <p style={{ float: 'left', marginRight: '5px', textDecoration: 'underline' }}>Choose item : </p>\n      <div>\n        {\n          items.map((item, index) => (\n            <button\n              type=\"button\"\n              style={{\n                backgroundImage: `url(${`./assets/items/${items[index]}.png`})`,\n                marginRight: '3px',\n                backgroundRepeat: 'no-repeat',\n              }}\n              className=\"Tile\"\n              value={item}\n              key={`tileId-${index + 1}`}\n              onClick={selectItem}\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default PokeditorChooseItem;\n","import React from 'react';\n\nconst PokeditorChooseStartingPoint = (props) => {\n  const { selectTile } = props;\n  return (\n    <div>\n      <p style={{ float: 'left', marginRight: '5px', textDecoration: 'underline' }}>Starting point : </p>\n      <div>\n        <p>\n          Player 1\n          <button\n            type=\"button\"\n            style={{\n              background: 'url(\"./assets/characters/guyBottom.png\"), url(\"./assets/tiles/008.png\")',\n              backgroundRepeat: 'no-repeat',\n              backgroundPosition: 'center',\n            }}\n            className=\"Tile\"\n            value=\"p1\"\n            onClick={selectTile}\n          />\n          Player 2\n          <button\n            type=\"button\"\n            style={{\n              backgroundImage: 'url(\"./assets/characters/femaleBottom.png\"), url(\"./assets/tiles/008.png\")',\n              backgroundRepeat: 'no-repeat',\n              backgroundPosition: 'center',\n            }}\n            className=\"Tile\"\n            value=\"p2\"\n            onClick={selectTile}\n          />\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PokeditorChooseStartingPoint;\n","import React, { Component } from 'react';\n\nclass PokeditorChooseSize extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      xInput: 10,\n      yInput: 10,\n    };\n  }\n\n  handleChange = (event) => {\n    if (event.target.value > 0 && event.target.value <= 50) {\n      const input = event.target.name;\n      this.setState({ [input]: event.target.value });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { changeSize } = this.props;\n    const { xInput, yInput } = this.state;\n    changeSize(xInput, yInput);\n  }\n\n  render() {\n    const { xInput, yInput } = this.state;\n    return (\n      <div>\n        <p style={{ margin: '0' }}>\n          Change level size\n          <span style={{ color: 'red' }}> WARNING: This will RESET current level</span>\n        </p>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"Length\">\n            Length :\n            <input name=\"xInput\" type=\"number\" value={xInput} onChange={this.handleChange} />\n          </label>\n          <label htmlFor=\"Height\">\n            Height :\n            <input name=\"yInput\" type=\"number\" value={yInput} onChange={this.handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Confirm\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PokeditorChooseSize;\n","import React, { Component } from 'react';\n\nclass PokeditorChooseSize extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: 60,\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({ timer: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { changeTimer } = this.props;\n    const { timer } = this.state;\n    changeTimer(timer);\n  }\n\n  render() {\n    const { timer } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"Change timer :\">\n            Timer :\n            <input name=\"xInput\" type=\"number\" value={timer} onChange={this.handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Confirm\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PokeditorChooseSize;\n","import React, { Component } from 'react';\n\nclass PokeditorSaveLevel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      levelName: '',\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({ levelName: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { saveLevel } = this.props;\n    const { levelName } = this.state;\n    saveLevel(levelName);\n    this.setState({ levelName: '' });\n  }\n\n  render() {\n    const { levelName } = this.state;\n    return (\n      <div style={{ float: 'right' }}>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"Level name\">\n            Level name :\n            <input name=\"levelName\" type=\"text\" value={levelName} onChange={this.handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Save level\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PokeditorSaveLevel;\n","import React, { Component } from 'react';\n\nclass PokeditorLoadDeleteLevel extends Component {\n  constructor(props) {\n    super(props);\n    if (props.customLevels) {\n      this.state = {\n        levelName: props.customLevels[0],\n      };\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { levelName } = this.state;\n    if (!nextProps.customLevels[levelName]) {\n      this.setState({ levelName: nextProps.customLevels[0] });\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ levelName: event.target.value });\n  }\n\n  render() {\n    const { levelName } = this.state;\n    const { customLevels, loadLevel, deleteLevel } = this.props;\n    return (\n      <div>\n        <form>\n          Custom levels list :\n          <select value={levelName} onChange={this.handleChange}>\n            {\n              customLevels\n                ? customLevels.map((level, index) => <option key={`levelId-${index + 1}`} value={level}>{level}</option>)\n                : null\n            }\n          </select>\n          <button type=\"button\" onClick={() => loadLevel(levelName)} value={levelName} id=\"loadLevel\">Load</button>\n          <button type=\"button\" onClick={() => deleteLevel(levelName)} value={levelName} id=\"deleteLevel\">Delete</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PokeditorLoadDeleteLevel;\n","import React from 'react';\n\nconst PokeditorBoard = (props) => {\n  const {\n    level, items, changeTile, playerOneX, playerOneY, playerTwoX, playerTwoY,\n  } = props;\n  // Each tile will call this function to determine if there is a player to display\n  const tileDisplay = (rowIndex, colIndex, tileId) => {\n    let tile;\n    if ((rowIndex === playerOneX && colIndex === playerOneY)\n      || (rowIndex === playerTwoX && colIndex === playerTwoY)) {\n      if (rowIndex === playerOneX && colIndex === playerOneY) {\n        tile = `url('./assets/characters/guyBottom.png'), url(${`./assets/tiles/${tileId}.png`})`;\n      } else {\n        tile = `url('./assets/characters/femaleBottom.png'), url(${`./assets/tiles/${tileId}.png`})`;\n      }\n    } else {\n      tile = `url(${`./assets/tiles/${tileId}.png`})`;\n    }\n    return tile;\n  };\n  return (\n    <div className=\"Board\" style={{ margin: '0' }}>\n      <table className=\"pokeditorTable\">\n        <tbody>\n          {\n            level.map((row, rowIndex) => (\n              <tr key={`rowId-${rowIndex + 1}`}>\n                {row.map((tileId, colIndex) => (\n                  <th className=\"pokeditorTh\" key={`colId-${colIndex + 1}`}>\n                    <button\n                      type=\"button\"\n                      style={{\n                        backgroundImage:\n                          tileDisplay(\n                            rowIndex, colIndex, tileId, playerOneX,\n                            playerOneY, playerTwoX, playerTwoY,\n                          ),\n                        backgroundRepeat: 'no-repeat, no-repeat',\n                        backgroundPosition: 'center, center',\n                      }}\n\n                      className=\"Tile\"\n                      value={tileId}\n                      onClick={changeTile(rowIndex, colIndex)}\n                    >\n\n                      {\n                        items[rowIndex][colIndex] !== '000'\n                          ? <img alt=\"Item\" className=\"Item\" src={`./assets/items/${items[rowIndex][colIndex]}.png`} />\n                          : null\n\n                      }\n                    </button>\n                  </th>\n                ))}\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\n\nexport default PokeditorBoard;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PokeditorChooseTile from './PokeditorChooseTile';\nimport PokeditorChooseItem from './PokeditorChooseItem';\nimport PokeditorChooseStartingPoint from './PokeditorChooseStartingPoint';\nimport PokeditorChooseSize from './PokeditorChooseSize';\nimport PokeditorChooseTimer from './PokeditorChooseTimer';\n// import PokeditorChooseGameMode from './PokeditorChooseGameMode';\nimport PokeditorSaveLevel from './PokeditorSaveLevel';\nimport PokeditorLoadDeleteLevel from './PokeditorLoadDeleteLevel';\nimport PokeditorBoard from './PokeditorBoard';\n// import PokeditorMatrix from './PokeditorMatrix';\nimport './Pokeditor.css';\n\nclass Pokeditor extends Component {\n  constructor(props) {\n    super(props);\n    if (!localStorage.getItem('PokemazeCustomLevels')) {\n      localStorage.setItem('PokemazeCustomLevels', JSON.stringify({}));\n    }\n    const customLevels = Object.keys(JSON.parse(localStorage.getItem('PokemazeCustomLevels')));\n    // TO DO : add a way to modify/write a json file\n    // TO DO : select/edit existing levels\n    // TO DO : add a way to get file list from assets/tiles folder...\n    // TO DO : select type of key\n    //    ADD YOUR TILES HERE\n    this.tiles = ['000', '001', '002', '003', '004', '005', '006', '007', '008', '009', '010', '015', '016',\n      '017', '018', '019', '020', '021', '023', '024', '025', '026', '027',\n      '028', '029', '030', '031', '032', '033', '034', '035', '036', '037', '038', '039',\n      '040', '041', '042', '043', '044', '045', '046', '047', '048', '049', '050', '051',\n      '052', '053', '054', '055', '056', '057', '058', '059', '060', '061', '062', '063',\n      '064', '065', '066', '067', '068', '069', '070', '071', '072', '073', '074', '075',\n      '405', '500', '501', '502', '503',\n      '504', '505', '510', '511', '512', '513', '514', '515', '518', '519', '520', '521',\n      '522', '523', '524', '525', '526', '527', '529', '900'];\n    //    ADD YOUR ITEMS HERE\n    this.items = ['000', '001', '002', '700', '701', '702', '703', '704', '705', '800', '801',\n      '802', '803', '804', '805', '900'];\n    this.state = {\n      // gameMode: 'Solo',\n      customLevels,\n      level: [\n        ['008', '008', '008', '008', '008', '008', '008', '008', '008', '008'],\n        ['008', '008', '008', '008', '008', '008', '008', '008', '008', '008'],\n        ['008', '008', '008', '008', '008', '008', '008', '008', '008', '008'],\n        ['008', '008', '008', '008', '008', '008', '008', '008', '008', '008'],\n        ['008', '008', '008', '008', '008', '008', '008', '008', '008', '008'],\n        ['008', '008', '008', '008', '008', '008', '008', '008', '008', '008'],\n        ['008', '008', '008', '008', '008', '008', '008', '008', '008', '008'],\n        ['008', '008', '008', '008', '008', '008', '008', '008', '008', '008'],\n        ['008', '008', '008', '008', '008', '008', '008', '008', '008', '008'],\n        ['008', '008', '008', '008', '008', '008', '008', '008', '008', '008'],\n      ],\n      items: [\n        ['000', '000', '000', '000', '000', '000', '000', '000', '000', '000'],\n        ['000', '000', '000', '000', '000', '000', '000', '000', '000', '000'],\n        ['000', '000', '000', '000', '000', '000', '000', '000', '000', '000'],\n        ['000', '000', '000', '000', '000', '000', '000', '000', '000', '000'],\n        ['000', '000', '000', '000', '000', '000', '000', '000', '000', '000'],\n        ['000', '000', '000', '000', '000', '000', '000', '000', '000', '000'],\n        ['000', '000', '000', '000', '000', '000', '000', '000', '000', '000'],\n        ['000', '000', '000', '000', '000', '000', '000', '000', '000', '000'],\n        ['000', '000', '000', '000', '000', '000', '000', '000', '000', '000'],\n        ['000', '000', '000', '000', '000', '000', '000', '000', '000', '000'],\n      ],\n      selectedTile: null,\n      selectedItem: null,\n      playerOneX: null,\n      playerOneY: null,\n      playerTwoX: null,\n      playerTwoY: null,\n      timer: 60,\n    };\n  }\n\n  selectTile = (event) => {\n    this.setState({ selectedTile: event.target.value, selectedItem: null });\n  }\n\n  selectItem = (event) => {\n    this.setState({ selectedItem: event.target.value, selectedTile: null });\n  }\n\n  saveLevel = (levelName) => {\n    const {\n      level, items, playerOneX, playerOneY, playerTwoX, playerTwoY, timer, // gameMode,\n    } = this.state;\n    const currentData = JSON.parse(localStorage.getItem('PokemazeCustomLevels'));\n    const currentLevel = {\n      tiles: level,\n      items,\n      startingPositions: {\n        player1: {\n          x: playerOneY,\n          y: playerOneX,\n        },\n        player2: {\n          x: playerTwoY,\n          y: playerTwoX,\n        },\n      },\n      timer,\n      typeOfKey: '002',\n      isTuto: true,\n    };\n    // currentData[gameMode][levelName] = currentLevel;\n    currentData[levelName] = currentLevel;\n    localStorage.setItem('PokemazeCustomLevels', JSON.stringify(currentData));\n    // Refresh render for load/delete levels\n    const customLevels = Object.keys(JSON.parse(localStorage.getItem('PokemazeCustomLevels')));\n    this.setState({ customLevels });\n  }\n\n  loadLevel = (levelName) => {\n    if (levelName && levelName !== undefined) {\n      const levelsList = JSON.parse(localStorage.getItem('PokemazeCustomLevels'));\n      this.setState({\n        level: levelsList[levelName].tiles,\n        items: levelsList[levelName].items,\n        playerOneX: levelsList[levelName].startingPositions.player1.y,\n        playerOneY: levelsList[levelName].startingPositions.player1.x,\n        playerTwoX: levelsList[levelName].startingPositions.player2.y,\n        playerTwoY: levelsList[levelName].startingPositions.player2.x,\n        timer: levelsList[levelName].timer,\n      });\n    }\n  }\n\n  deleteLevel = (levelName) => {\n    const levelsList = JSON.parse(localStorage.getItem('PokemazeCustomLevels'));\n    delete levelsList[levelName];\n    localStorage.setItem('PokemazeCustomLevels', JSON.stringify(levelsList));\n    const customLevels = Object.keys(JSON.parse(localStorage.getItem('PokemazeCustomLevels')));\n    this.setState({ customLevels });\n  }\n\n  // changeGameMode = (gameMode) => {\n  //   this.setState({ gameMode });\n  // }\n\n  changeTile = (rowIndex, colIndex) => () => {\n    const { selectedTile, selectedItem } = this.state;\n    if (selectedTile !== null) {\n      if (selectedTile === 'p1') {\n        this.setState({ playerOneX: rowIndex, playerOneY: colIndex });\n        return;\n      }\n      if (selectedTile === 'p2') {\n        this.setState({ playerTwoX: rowIndex, playerTwoY: colIndex });\n        return;\n      }\n      const { level } = this.state;\n      level[rowIndex][colIndex] = selectedTile;\n      this.setState({ level });\n    }\n    if (selectedItem !== null) {\n      const { items } = this.state;\n      items[rowIndex][colIndex] = selectedItem;\n      this.setState({ items });\n    }\n  }\n\n  changeTimer = (newTimer) => {\n    this.setState({ timer: newTimer });\n  }\n\n  changeSize = (x, y) => {\n    const newLevel = [];\n    for (let i = 0; i < y; i += 1) {\n      newLevel.push([]);\n      for (let j = 0; j < x; j += 1) {\n        newLevel[i].push('008');\n      }\n    }\n    const newItemMatrix = [];\n    for (let i = 0; i < y; i += 1) {\n      newItemMatrix.push([]);\n      for (let j = 0; j < x; j += 1) {\n        newItemMatrix[i].push('000');\n      }\n    }\n    this.setState({\n      level: newLevel,\n      items: newItemMatrix,\n      playerOneX: null,\n      playerOneY: null,\n      playerTwoX: null,\n      playerTwoY: null,\n      timer: 60,\n    });\n  }\n\n  render() {\n    const {\n      level, items, playerOneX, playerOneY, playerTwoX, playerTwoY, customLevels,\n      // gameMode, timer,\n    } = this.state;\n    return (\n      <div className=\"Pokeditor\">\n        <h1>Pokeditor</h1>\n        <div className=\"menu\">\n          <Link to=\"/\">\n            <button\n              className=\"backButton\"\n              type=\"button\"\n              size=\"lg\"\n              style={{ marginRight: 100 }}\n            >\n              Back to menu\n            </button>\n          </Link>\n        </div>\n        <PokeditorChooseSize changeSize={this.changeSize} />\n        {/* <PokeditorChooseGameMode changeGameMode={this.changeGameMode} /> */}\n        <PokeditorLoadDeleteLevel\n          loadLevel={this.loadLevel}\n          deleteLevel={this.deleteLevel}\n          customLevels={customLevels}\n        />\n        <PokeditorSaveLevel saveLevel={this.saveLevel} />\n        <PokeditorChooseTimer changeTimer={this.changeTimer} />\n        <PokeditorChooseTile tiles={this.tiles} selectTile={this.selectTile} />\n        <PokeditorChooseItem items={this.items} selectItem={this.selectItem} />\n        <PokeditorChooseStartingPoint selectTile={this.selectTile} />\n        <PokeditorBoard\n          level={level}\n          items={items}\n          changeTile={this.changeTile}\n          playerOneX={playerOneX}\n          playerOneY={playerOneY}\n          playerTwoX={playerTwoX}\n          playerTwoY={playerTwoY}\n        />\n        {/* <PokeditorMatrix\n          level={level}\n          items={items}\n          playerOneX={playerOneX}\n          playerOneY={playerOneY}\n          playerTwoX={playerTwoX}\n          playerTwoY={playerTwoY}\n          timer={timer}\n          gameMode={gameMode}\n        /> */}\n      </div>\n    );\n  }\n}\n\nexport default Pokeditor;\n","import React from 'react';\nimport { Route, HashRouter, Switch } from 'react-router-dom';\nimport './App.css';\nimport SoloGame from './SoloGame';\nimport DuoGame from './DuoGame';\nimport Game from './Game';\nimport Multiplayer from './Multiplayer';\nimport Home from './Home';\nimport PokedexProvider from './PokedexProvider';\nimport Pokedex from './Pokedex';\nimport Pokeditor from './Pokeditor';\nimport * as GameData from './gameData.json';\n\n// <Route path=\"/game\" render={props => <Game level={selectedLevel} {...props} />} />\n\nconst App = () => {\n  // If GameData is not in localstorage, add it\n  if (!localStorage.getItem('Gamedata')) {\n    // TO DO: check if localStorage is different from online json?\n    // Could conflict with futur custom levels + updates\n    // || localStorage.getItem('Gamedata', JSON.stringify(GameData)) !== JSON.stringify(GameData)) {\n    localStorage.setItem('GameData', JSON.stringify(GameData));\n  }\n  if (!localStorage.getItem('PokemazeCustomLevels')) {\n    localStorage.setItem('PokemazeCustomLevels', JSON.stringify({}));\n  }\n\n  return (\n    <PokedexProvider>\n      <HashRouter>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/solo-game\" component={SoloGame} />\n            <Route path=\"/duo-game\" component={DuoGame} />\n            <Route path=\"/game\" component={Game} />\n            <Route path=\"/multiplayer\" component={Multiplayer} />\n            <Route path=\"/pokedex\" component={Pokedex} />\n            <Route path=\"/pokeditor\" component={Pokeditor} />\n          </Switch>\n        </div>\n      </HashRouter>\n    </PokedexProvider>\n  );\n};\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter, Switch, NavLink } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}